{"version":3,"sources":["pages/ingredient-details-page/ingredient-details-page.module.css","components/app/app.module.css","components/modal-overlay/modal-overlay.module.css","pages/profile-page/profile-page.module.css","pages/order-details-page/order-details-page.module.css","components/burger-constructor/burger-constructor.module.css","components/app-header/app-header.module.css","components/account-navigation/account-navigation.module.css","utils/burger-data.ts","services/types/hooks.ts","components/protected-route/protected-route.tsx","components/ingredient-details/ingredient-details.tsx","pages/ingredient-details-page/ingredient-details-page.tsx","services/actions/api.ts","services/toolkit-slices/burger-data.ts","services/toolkit-slices/order.ts","services/toolkit-slices/burger-constructor.ts","services/toolkit-slices/ingredient-counter.ts","services/actions/burger-data.ts","services/toolkit-slices/user-data.ts","services/actions/user.ts","components/app-header/app-header.tsx","services/toolkit-slices/modal.ts","components/ingredients/ingredient.tsx","components/ingredient-group/ingredient-group.tsx","components/burger-ingredients/burger-ingredients.tsx","images/logo.svg","components/constructor-element-draggable/constructor-element-draggable.tsx","services/toolkit-slices/total-price.ts","components/burger-constructor/burger-constructor.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/order-number-details/order-number-details.tsx","pages/burger-constructor-page/burger-constructor-page.tsx","components/email-input/email-input.tsx","components/password-input/password-input.tsx","services/actions/auth.ts","pages/authorisation-page/authorisation-page.tsx","components/input-default/input-default.tsx","utils/form-validation.ts","pages/register-page/register-page.tsx","services/toolkit-slices/reset-password-marker.ts","services/actions/change-password.ts","pages/forgor-password-page/forgor-password-page.tsx","pages/reset-password-page/reset-password-page.tsx","components/account-navigation/account-navigation.tsx","pages/profile-page/profile-page.tsx","components/profile-details/profile-details.tsx","pages/logout-page/logout-page.tsx","images/404_shiba_inu.png","pages/not-found-404/not-found-404.tsx","components/ingredient-icon/ingredient-icon.tsx","components/created-order/created-order.tsx","components/order-numbers-list/order-numbers-list.tsx","components/total-orders/total-orders.tsx","components/order-statistics/order-statistics.tsx","services/toolkit-slices/orders-feed.ts","pages/feed-page/feed-page.tsx","components/order-composition/order-composition.tsx","components/order-details/order-details.tsx","pages/order-details-page/order-details-page.tsx","services/toolkit-slices/user-orders-feed.ts","pages/my-orders-page/my-orders-page.tsx","components/app/app.tsx","reportWebVitals.ts","services/toolkit-slices/index.ts","services/middlware/socket.ts","services/store.ts","index.tsx","components/ingredient-icon/ingredient-icon.module.css","components/ingredient-details/ingredient-details.module.css","components/order-number-details/order-number-details.module.css","components/created-order/created-order.module.css","pages/authorisation-page/authorisation-page.module.css","components/burger-ingredients/burger-ingredients.module.css","components/ingredients/ingredient.module.css","pages/feed-page/feed-page.module.css","components/order-details/order-details.module.css","pages/register-page/register-page.module.css","pages/forgor-password-page/forgot-password-page.module.css","pages/reset-password-page/reset-password-page.module.css","pages/not-found-404/not-found-404.module.css","components/order-numbers-list/order-numbers-list.module.css","pages/my-orders-page/my-orders-page.module.css","components/order-composition/order-composition.module.css","components/ingredient-group/ingredient-group.module.css","components/constructor-element-draggable/constructor-element-draggable.module.css","components/modal/modal.module.css","components/profile-details/profile-details.module.css","pages/logout-page/logout-page.module.css","components/order-statistics/order-statistics.module.css","components/total-orders/total-orders.module.css"],"names":["module","exports","ingredientTypeRuName","orderStatus","useSelector","selectorHook","useAppDispatch","useDispatch","ProtectedRoute","children","rest","userData","state","render","location","user","name","email","to","pathname","from","IngredientDetails","burgerDataState","useState","undefined","ingredient","setIngredient","params","useParams","React","useEffect","findResult","burgerData","find","element","_id","id","className","ingredientDetailsStyle","container","heading","Fragment","src","image_large","alt","wrapper","properties","calories","proteins","fat","carbohydrates","IngredientDetailsPage","ingredientDetailsPage","getResponseData","res","ok","json","text","then","Error","queryBurgerDataUrl","queryFeedDataUrl","mapBurgerIngredientFromId","arrayOfIngredientsIds","arrayOfIngredients","map","orderIngredient","cutDuplicatesFromArray","arrayWithDuplicates","filter","index","array","indexOf","replaceBunToStart","arrayBunSorted","indexOfBun","findIndex","type","splice","concat","countNotUniqueIngredients","reduce","counter","idValue","calculateTotalPrice","bun","ingredients","bunPrice","price","acc","item","mapBunAndIngredientsFromArray","objectOfBunConcatIngredientArray","defineActualOrderDateInformation","dateString","actualCompletionTime","orderDateTime","Date","orderDate","differenceInDays","setHours","toLocaleDateString","Intl","RelativeTimeFormat","numeric","format","actualDateInformationStr","getHours","getMinutes","getTimezoneOffset","charAt","toUpperCase","slice","setCookie","cookieName","tokenValue","props","exp","path","expires","d","setTime","getTime","toUTCString","encodeURIComponent","updatedCookie","propName","propValue","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","deleteCookie","burgerDataSlice","createSlice","initialState","isLoading","hasError","error","reducers","getBurgerDataSuccess","action","payload","getBurgerData","getBurgerDataFailed","actions","orderSlice","order","orderNumber","isValidOrder","checkOrder","getOrderData","getOrderSuccess","burgerConstructorSlice","addIngredientToOrder","copiedSelectedItemsIdIngredients","push","uniqueId","now","toString","Math","random","substr","deleteIngredientFromOrder","copiedIngredientArray","itemWithId","console","log","setIngredientToDrag","updatedIngredients","dragItem","dragIndex","hoverItem","hoverIndex","cleanOrder","ingredientCounterSlice","selectedIngredients","counterIncrement","copiedSelectedIngredients","counterDecrement","counterClean","actionsBurgerData","actionsOrder","actionsConstructor","actionsIngredientCounter","userDataSlice","isUserLoading","success","accessToken","refreshToken","getUserData","setUserData","setTokens","refreshUserData","deleteUserData","actionsUserData","getUser","retryOnErrorCount","dispatch","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","throwOnError","data","catch","errObj","err","JSON","parse","message","Promise","resolve","refreshAccessToken","body","stringify","withRouter","history","useHistory","routePath","useMemo","headerStyle","header","exact","link","activeClassName","active","handleModalSlice","modalsOpened","ingredientForModal","setIngredientForModal","handleModalOpen","handleModalClose","Ingredient","ingredientCounter","actionsModal","useDrag","collect","monitor","isDragging","dragRef","ref","ingredientsStyle","dragging","card","onClick","modalIngredientDetailsOpened","draggable","includes","count","cur","size","image","IngredientGroup","forwardRef","useLocation","groupName","burgerIngredientStyle","grid","groupItems","burgerItem","background","BurgerIngredients","sauce","useRef","filling","tab","setActiveTab","scroll","scrollIntoView","behavior","block","handleMouseScroll","useCallback","event","mainTopPosition","currentTarget","getBoundingClientRect","top","getCurrentPosition","current","isVisibleArea","rectangle","bottom","saucePosition","fillingPosition","ingredientsWrapper","burgerIngredients","value","layout","onScroll","main","ConstructorElementDraggable","useDrop","accept","isOver","hover","hoverBoundingRect","hoverMiddleY","hoverActualY","getClientOffset","y","moveIngredientsListItem","dropSortRef","burgerConstructor","draggableElement","over","thumbnail","handleClose","totalPriceSlice","totalSendingOrderPrice","totalFeedOrderPrice","setTotalSendingOrderPrice","setTotalFeedOrderPrice","BurgerConstructor","burgerConstructorIngredients","totalPrice","actionsTotalSendingOrderPrice","login","calculateTotalPriceTotalSendingOrderPriceCallback","ingredientItem","drop","dropRef","overbun","Array","of","isLocked","bunImage","constructor","overingredient","icon","ingredientsIdsList","commonArrayOfIngredientsIds","unshift","createCommonArrayOfIngredientsIds","number","modalOrderNumberDetailsOpened","ModalOverlay","modalOverlayStyle","overlay","handleOnClose","modalRoot","getElementById","Modal","handleEscClose","evt","key","addEventListener","removeEventListener","ReactDOM","createPortal","modalStyle","modal","stopPropagation","cross","OrderNumberDetails","orderState","orderNumberDetailsStyle","digits","shadow","BurgerConstructorPage","modalState","section","DndProvider","backend","HTML5Backend","EmailInputComponent","onChange","PasswordInputComponent","AuthorisationPage","setEmail","password","setPassword","authPage","onSubmit","e","preventDefault","authorise","target","textWrapper","InputDefault","changeIcon","inputType","changeInputType","inputRef","inputError","errorMessage","length","validateInputDefault","placeholder","onIconClick","setTimeout","focus","errorText","RegistrationPage","setName","regPage","register","forgotPasswordMarkerSlice","emailWasSent","setEmailSentMarker","deleteEmailSentMarker","actionsForgotPasswordMarker","ForgotPasswordPage","setValue","redirectToChangePWPage","forgotPWPage","requestToResetPassword","ResetPasswordPage","forgotPasswordMarker","code","setCode","resetPWPage","token","response","changePassword","AccountNavigation","navigation","AccountPage","profilePage","ProfileDetails","username","setUsername","setLogin","isFormChanged","profile","buttons","LogoutPage","logoutPage","window","back","NotFound404","notFound","trollShibaInu","IngredientIcon","ingredientIcon","roundDiv","moduleBorderWrap","isSixth","restCount","sixthIngredient","imageName","ingredientCount","CreatedOrder","burgerIngredientBunSorted","burgerIngredientCutDuplicates","burgerIngredientSixFirst","restIngredientCount","countOfDuplicatedIngredients","calculateTotalFeedOrderPrice","newBurgerIngredient","orderCreatedAt","createdAt","modalOrderDetailsOpened","preview","burgerName","status","textDone","reverse","OrderNumbersList","numbersList","listName","wrapperList","list","TotalOrders","totalOrders","CreatedOrdersStatistics","ordersFeedState","total","toLocaleString","totalToday","createdNumbers","orders","textOrderDone","ordersFeedSlice","isOrderFeedLoading","wsStartConnecting","wsConnected","wsInit","wsConnectionSuccess","wsConnectionError","wsGetMessage","wsSendMessage","wsConnectionClosed","wsActions","onOpen","onClose","onError","onMessage","FeedPage","actionsOrdersFeed","feedWrapper","feed","feedItem","orderWrapper","OrderComposition","orderComposition","part","OrderDetails","orderIngredientBunSorted","orderIngredientCutDuplicates","orderTotalPrice","setOrder","findOrderResult","newOrderIngredients","orderDetails","OrderDetailsPage","orderActions","orderDetailsPage","userOrdersFeedSlice","wsActionsSecured","MyOrdersPage","userOrdersFeedState","actionsUserOrdersFeed","userOrders","App","goBack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","reducer","socketMiddleware","wsUrl","isTokenRequired","store","socket","isConnected","next","split","WebSocket","onopen","readyState","onerror","onmessage","parsedData","onclose","send","configureStore","middleware","thunk","devTools","process","StrictMode","basename"],"mappings":"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","file":"static/js/main.d469782d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ingredient-details-page_wrapper__35Qhz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__3yfFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__AKixE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"profile-page_main__1Y1TK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"order-details-page_wrapper__396Vm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"burger-constructor_container__332QY\",\"top\":\"burger-constructor_top__3B8eW\",\"bottom\":\"burger-constructor_bottom__1l2yp\",\"constructor\":\"burger-constructor_constructor__2Wifa\",\"wrapper\":\"burger-constructor_wrapper__3y1z5\",\"order\":\"burger-constructor_order__z_yls\",\"icon\":\"burger-constructor_icon__2zlHT\",\"overingredient\":\"burger-constructor_overingredient__3CwTp\",\"overbun\":\"burger-constructor_overbun__bZSGO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__1iHLW\",\"flex-wrapper\":\"app-header_flex-wrapper__175mI\",\"flex-container\":\"app-header_flex-container__18DVr\",\"link\":\"app-header_link__2y8TU\",\"active\":\"app-header_active__1gFZ7\",\"iconWrapper\":\"app-header_iconWrapper__3pMIP\",\"flex-nav-link\":\"app-header_flex-nav-link__1ANsf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"account-navigation_wrapper__1Z1Aq\",\"link\":\"account-navigation_link__3jOxT\",\"active\":\"account-navigation_active__dzHJ2\",\"text\":\"account-navigation_text__1cL40\"};","import {TIngredient, TReducedCounter} from \"../services/types/data\";\r\n\r\nenum ingredientTypeRuName {\r\n  bun = \"Булки\",\r\n  sauce = \"Соусы\",\r\n  main = \"Начинка\"\r\n}\r\n\r\nenum orderStatus {\r\n  done = \"done\",\r\n  created = \"created\",\r\n  pending = \"pending\"\r\n}\r\n\r\nconst queryBurgerDataUrl = 'https://norma.nomoreparties.space/api';\r\nconst queryFeedDataUrl = 'wss://norma.nomoreparties.space';\r\n\r\nfunction mapBurgerIngredientFromId(arrayOfIngredientsIds: ReadonlyArray<string>, arrayOfIngredients: ReadonlyArray<TIngredient>) {\r\n  return arrayOfIngredientsIds.map((orderIngredient) => arrayOfIngredients.find(ingredient => ingredient._id === orderIngredient));\r\n}\r\n\r\nfunction cutDuplicatesFromArray(arrayWithDuplicates: Array<TIngredient | undefined>) {\r\n  // вырезаем из массива дубликаты ингредиентов\r\n  return arrayWithDuplicates.filter((ingredient, index, array) => array.indexOf(ingredient) === index);\r\n}\r\n\r\nfunction replaceBunToStart(array: Array<TIngredient | undefined>) {\r\n  let arrayBunSorted = array;\r\n  const indexOfBun = array.findIndex(ingredient => ingredient && ingredient.type === 'bun');\r\n  if (indexOfBun !== 0) {\r\n    arrayBunSorted = array.splice(indexOfBun, 1);\r\n    return arrayBunSorted.concat(array);\r\n  } else return arrayBunSorted;\r\n}\r\n\r\nfunction countNotUniqueIngredients(array: ReadonlyArray<string>) {\r\n  return array.reduce(function (counter: TReducedCounter, idValue: string) {\r\n    counter[idValue] ? counter[idValue]++ : counter[idValue] = 1;\r\n    return counter;\r\n  }, {});\r\n}\r\n\r\nconst calculateTotalPrice = (bun: TIngredient | undefined | null, ingredients: Array<TIngredient | undefined>) => {\r\n  const ingredientArrayReducer = (acc: number, item: TIngredient | undefined | null) => {\r\n    if (!item) return acc;\r\n    return acc + item.price\r\n  }\r\n  let bunPrice = 0;\r\n  let ingredientPrice = 0;\r\n  if (bun) {\r\n    bunPrice = bun.price * 2;\r\n  }\r\n  if (ingredients !== undefined) {\r\n    ingredientPrice = ingredients\r\n      //.map(element => element && element.item ? element.item : element)\r\n      .reduce(ingredientArrayReducer, 0);\r\n    return ingredientPrice + bunPrice;\r\n  } else return null\r\n}\r\n\r\nconst mapBunAndIngredientsFromArray = (array: ReadonlyArray<TIngredient | undefined>) => {\r\n  let objectOfBunConcatIngredientArray: { bun: TIngredient | null | undefined, ingredients: Array<TIngredient | undefined> } = {\r\n    bun: undefined,\r\n    ingredients: []\r\n  };\r\n  objectOfBunConcatIngredientArray.bun = array.find(bun => bun && bun.type === \"bun\" && bun) || null;\r\n  objectOfBunConcatIngredientArray.ingredients = array\r\n    .filter(ingredient => ingredient && (ingredient.type === \"main\" || ingredient.type === \"sauce\") && ingredient);\r\n  return objectOfBunConcatIngredientArray;\r\n}\r\n\r\nconst defineActualOrderDateInformation = (dateString: string): string => {\r\n  const orderDateTime = new Date(dateString);\r\n  // [const day = orderDateTime.toLocaleDateString('ru-RU', {month: 'long', day: 'numeric'}) // '3 апреля']\r\n\r\n  /*** reset hours after getting new Date objects ***/\r\n  const orderDate = new Date(dateString);\r\n  const orderDateMidnight = orderDate.setHours(0, 0, 0, 0);\r\n  const nowDate = new Date();\r\n  const nowDateMidnight = nowDate.setHours(0, 0, 0, 0);\r\n\r\n  const dayMs = 86400000 // = 1000мс * 60сек * 60мин * 24ч\r\n\r\n  const differenceInDays = (orderDateMidnight - nowDateMidnight) / dayMs;\r\n  let actualCompletionTime;\r\n  if (differenceInDays < -3) {\r\n    actualCompletionTime = orderDate.toLocaleDateString('ru-RU');\r\n  } else {\r\n    actualCompletionTime = new Intl.RelativeTimeFormat('ru', {numeric: \"auto\"})\r\n      .format(differenceInDays, 'day');\r\n  }\r\n  const actualDateInformationStr = `${actualCompletionTime}, ${orderDateTime.getHours() >= 10\r\n    ? orderDateTime.getHours()\r\n    : \"0\" + orderDateTime.getHours()}:${orderDateTime.getMinutes() >= 10\r\n    ? orderDateTime.getMinutes()\r\n    : \"0\" + orderDateTime.getMinutes()} i-GMT${orderDateTime.getTimezoneOffset() <= 0\r\n    ? \"+\" + orderDateTime.getTimezoneOffset() / -60\r\n    : \"-\" + orderDateTime.getTimezoneOffset() / -60}`;\r\n  return actualDateInformationStr.charAt(0).toUpperCase() + actualDateInformationStr.slice(1);\r\n}\r\n\r\nfunction setCookie(cookieName: string, tokenValue: string | number | boolean | null, props: any = {}) {\r\n  props = {\r\n    path: '/',\r\n    ...props\r\n  }\r\n  let exp = props.expires;\r\n  if (typeof exp == 'number' && exp) {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + exp * 1000);\r\n    exp = props.expires = d;\r\n  }\r\n  if (exp && exp.toUTCString) {\r\n    props.expires = exp.toUTCString();\r\n  }\r\n  if (tokenValue !== null) {\r\n    tokenValue = encodeURIComponent(tokenValue);\r\n  }\r\n  let updatedCookie = cookieName + '=' + tokenValue;\r\n  for (const propName in props) {\r\n    updatedCookie += '; ' + propName;\r\n    const propValue = props[propName];\r\n    if (propValue !== true) {\r\n      updatedCookie += '=' + propValue;\r\n    }\r\n  }\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\nfunction getCookie(cookieName: string) {\r\n  const matches = document.cookie.match(\r\n    new RegExp('(?:^|; )' + cookieName.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nfunction deleteCookie(cookieName: string) {\r\n  // Находим куку по ключу token, удаляем её значение,\r\n  // устанавливаем отрицательное время жизни, чтобы удалить сам ключ token\r\n  setCookie(cookieName, null, {expires: -1});\r\n}\r\n\r\nexport {\r\n  ingredientTypeRuName,\r\n  orderStatus,\r\n  queryBurgerDataUrl,\r\n  queryFeedDataUrl,\r\n  mapBurgerIngredientFromId,\r\n  replaceBunToStart,\r\n  countNotUniqueIngredients,\r\n  cutDuplicatesFromArray,\r\n  calculateTotalPrice,\r\n  mapBunAndIngredientsFromArray,\r\n  defineActualOrderDateInformation,\r\n  setCookie,\r\n  getCookie,\r\n  deleteCookie\r\n};\r\n","import {TypedUseSelectorHook, useDispatch, useSelector as selectorHook} from 'react-redux';\r\nimport {AppDispatch, RootState} from './index';\r\n\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n\r\n","import React, {FunctionComponent} from \"react\";\r\nimport {Route, Redirect} from \"react-router-dom\";\r\n\r\nimport {useSelector} from \"../../services/types/hooks\";\r\nimport {TProtectedRouteProps} from \"../../services/types/data\";\r\n\r\nexport const ProtectedRoute: FunctionComponent<TProtectedRouteProps> = ({children, ...rest}) => {\r\n  const {userData} = useSelector(state => {\r\n    return state\r\n  });\r\n  \r\n  return (\r\n    <Route\r\n      {...rest} // это пропсы path и exact\r\n      render={({location}) =>  // render - пропс компонента Route. Исп-ся как функция, в св.с чем  избег-ся лишни рендеринг. Вызыв-ся при совпадении URL\r\n        (userData.user.name !== '' && userData.user.email !== '')\r\n          ? (children)\r\n          : (\r\n              <Redirect // Если пользователя нет в хранилище, происходит переадресация на роут /login\r\n                // Передадим в пропс to не строку, а объект.\r\n                to={{\r\n                  // Маршрут, на который произойдёт переадресация\r\n                  pathname: '/login',\r\n                  // В from сохраним текущий маршрут\r\n                  state: {from: location}\r\n                }} // все это после авторизации даст переадресацию на страницу, которую изначально открыл польз-ль, не будучи автор-ым\r\n              />)\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React, {FunctionComponent, useState} from 'react';\r\n\r\nimport {useSelector} from \"../../services/types/hooks\";\r\n\r\nimport ingredientDetailsStyle from './ingredient-details.module.css';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {TIngredient} from \"../../services/types/data\";\r\n\r\nexport const IngredientDetails: FunctionComponent = () => {\r\n  const {burgerDataState} = useSelector(state => {\r\n    return state\r\n  });\r\n  const [ingredient, setIngredient] = useState<TIngredient | undefined>(undefined);\r\n\r\n  const params: { id: string } = useParams();\r\n  React.useEffect(() => {\r\n    const findResult = burgerDataState.burgerData.find(element => element._id === params.id)\r\n    setIngredient(findResult)\r\n  }, [burgerDataState, params.id])\r\n\r\n\r\n  return (\r\n    <div className={ingredientDetailsStyle.container}>\r\n      <h1 className={`pt-3 text text_type_main-large ${ingredientDetailsStyle.heading}`}>Детали ингредиента</h1>\r\n      {\r\n        ingredient &&\r\n        <React.Fragment key={ingredient._id}>\r\n          <img src={ingredient.image_large} alt={ingredient.name}/>\r\n          <p className=\"text text_type_main-medium\">{ingredient.name}</p>\r\n          <ul className={ingredientDetailsStyle.wrapper}>\r\n            <li className={ingredientDetailsStyle.properties}>\r\n              <p className=\"text text_type_main-default text_color_inactive\">Калории, ккал</p>\r\n              <p className=\"mt-2 text text_type_digits-default text_color_inactive\">{ingredient.calories}</p>\r\n            </li>\r\n            <li className={ingredientDetailsStyle.properties}>\r\n              <p className=\"text text_type_main-default text_color_inactive\">Белки, г</p>\r\n              <p className=\"mt-2 text text_type_digits-default text_color_inactive\">{ingredient.proteins}</p>\r\n            </li>\r\n            <li className={ingredientDetailsStyle.properties}>\r\n              <p className=\"text text_type_main-default text_color_inactive\">Жиры, г</p>\r\n              <p className=\"mt-2 text text_type_digits-default text_color_inactive\">{ingredient.fat}</p>\r\n            </li>\r\n            <li className={ingredientDetailsStyle.properties}>\r\n              <p className=\"text text_type_main-default text_color_inactive\">Углеводы, г</p>\r\n              <p className=\"mt-2 text text_type_digits-default text_color_inactive\">{ingredient.carbohydrates}</p>\r\n            </li>\r\n          </ul>\r\n        </React.Fragment>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\n\r\nimport ingredientDetailsPage from './ingredient-details-page.module.css';\r\n\r\nimport {IngredientDetails} from \"../../components/ingredient-details/ingredient-details\";\r\n\r\nexport const IngredientDetailsPage: FunctionComponent = () => {\r\n\r\n  return (\r\n    <div className={ingredientDetailsPage.wrapper}>\r\n        <IngredientDetails/>\r\n    </div>\r\n  )\r\n}\r\n","export function getResponseData<T>(res: Response): Promise<T> {\r\n  if (!res.ok) {\r\n    // return Promise.reject(res.json());\r\n    return res.text().then(text => {\r\n      throw new Error(`Ошибка: ${text}`)\r\n    })\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport function throwOnError<T>(res: Response): Promise<T> {\r\n  if (!res.ok) {\r\n    return res.text().then(text => {\r\n      throw new Error(text)\r\n    })\r\n  }\r\n  return res.json();\r\n}\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\nimport {IBurgerDataSliceState} from \"../types/index\";\r\nimport {TErrorState, TIngredient} from \"../types/data\";\r\nimport {IBurgerDataActions} from \"../types/action-type\";\r\n\r\nexport const burgerDataSlice = createSlice({\r\n  name: 'burgerData', // префикс всех экшнов\r\n  initialState: {\r\n    isLoading: false,\r\n    hasError: false,\r\n    error: {},\r\n    burgerData: []\r\n  } as IBurgerDataSliceState,\r\n  reducers: {\r\n    getBurgerDataSuccess: (state, action: PayloadAction<ReadonlyArray<TIngredient>>) => {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        hasError: false,\r\n        burgerData: action.payload // приходит параметр\r\n      }\r\n    },\r\n    getBurgerData: (state) => {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        hasError: false,\r\n      }\r\n    },\r\n    getBurgerDataFailed: (state, action: PayloadAction<TErrorState>) => {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        hasError: true,\r\n        error: action.payload\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport default burgerDataSlice.reducer\r\n\r\nexport const {\r\n  getBurgerDataSuccess,\r\n  getBurgerData,\r\n  getBurgerDataFailed\r\n} = burgerDataSlice.actions\r\n\r\nexport const burgerDataActions: IBurgerDataActions = {\r\n  getBurgerDataSuccess: getBurgerDataSuccess,\r\n  getBurgerData: getBurgerData,\r\n  getBurgerDataFailed: getBurgerDataFailed\r\n}\r\n\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nimport {IOrderSliceState} from \"../types/index\";\r\nimport {IOrderActions} from \"../types/action-type\";\r\n\r\nexport const orderSlice = createSlice({\r\n  name: 'orderNumber',\r\n  initialState: {\r\n    order: [],\r\n    orderNumber: null,\r\n    isValidOrder: true,\r\n    isLoading: false\r\n  } as IOrderSliceState,\r\n  reducers: {\r\n    checkOrder: (state, action: PayloadAction<boolean>) => {\r\n      if(action.payload) {\r\n        return {\r\n          ...state,\r\n          isValidOrder: true\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          isValidOrder: false\r\n        }\r\n      }\r\n    },\r\n    getOrderData: (state) => {\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      }\r\n    },\r\n    getOrderSuccess: (state, action: PayloadAction<IOrderSliceState>) => {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        orderNumber: action.payload.orderNumber,\r\n        order: action.payload.order,\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport default orderSlice.reducer\r\nexport const {\r\n  checkOrder,\r\n  getOrderData,\r\n  getOrderSuccess\r\n} = orderSlice.actions\r\n\r\nexport const orderActions: IOrderActions = {\r\n  checkOrder: checkOrder,\r\n  getOrderData: getOrderData,\r\n  getOrderSuccess: getOrderSuccess\r\n}\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\nimport {TIngredient, TIngredientItem, TDraggableItem} from '../types/data';\r\nimport {IBurgerConstructorActions} from \"../types/action-type\";\r\n\r\nconst getInitialState = (): { bun: TIngredient | null; ingredients: ReadonlyArray<TIngredientItem> } => {\r\n  return {\r\n    bun: null,\r\n    ingredients: []\r\n  }\r\n}\r\n\r\nexport const burgerConstructorSlice = createSlice({\r\n  name: 'burgerConstructor',\r\n  initialState: getInitialState(),\r\n  reducers: {\r\n    addIngredientToOrder: (state, action: PayloadAction<TIngredient>) => {\r\n      const uniqId = (): string => Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n\r\n      if (action.payload.type === 'bun') {\r\n        return {\r\n          ...state,\r\n          bun: action.payload\r\n        }\r\n      } else {\r\n        const copiedSelectedItemsIdIngredients = [\r\n          ...state.ingredients\r\n        ];\r\n        copiedSelectedItemsIdIngredients.push({\r\n          item: action.payload,\r\n          uniqueId: uniqId()\r\n        })\r\n        return {\r\n          ...state,\r\n          ingredients: copiedSelectedItemsIdIngredients\r\n        }\r\n      }\r\n    },\r\n    deleteIngredientFromOrder: (state, action: PayloadAction<string>) => {\r\n      const copiedIngredientArray = [\r\n        ...state.ingredients\r\n      ];\r\n      const index = copiedIngredientArray.findIndex(itemWithId => itemWithId.uniqueId === action.payload) //id\r\n      if (index > -1) {\r\n        copiedIngredientArray.splice(index, 1)\r\n      } else {\r\n        console.log(`Error: Can not find itemWithId: ${action.payload}`)\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        ingredients: copiedIngredientArray\r\n      }\r\n    },\r\n    setIngredientToDrag: (state, action: PayloadAction<TDraggableItem>) => {\r\n      const updatedIngredients = [...state.ingredients]\r\n\r\n      const dragItem = state.ingredients[action.payload.dragIndex]\r\n      const hoverItem = state.ingredients[action.payload.hoverIndex]\r\n\r\n      updatedIngredients[action.payload.dragIndex] = hoverItem\r\n      updatedIngredients[action.payload.hoverIndex] = dragItem\r\n\r\n      return {\r\n        ...state,\r\n        ingredients: updatedIngredients\r\n      }\r\n    },\r\n    cleanOrder: () => {\r\n      return getInitialState();\r\n    }\r\n  }\r\n})\r\n\r\nexport default burgerConstructorSlice.reducer\r\n\r\nexport const {\r\n  addIngredientToOrder,\r\n  deleteIngredientFromOrder,\r\n  setIngredientToDrag,\r\n  cleanOrder\r\n} = burgerConstructorSlice.actions\r\n\r\nexport const burgerConstructorActions: IBurgerConstructorActions = {\r\n  addIngredientToOrder: addIngredientToOrder,\r\n  deleteIngredientFromOrder: deleteIngredientFromOrder,\r\n  setIngredientToDrag: setIngredientToDrag,\r\n  cleanOrder: cleanOrder\r\n}\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\nimport {TIngredient} from \"../types/data\";\r\nimport {ICounterActions} from \"../types/action-type\";\r\n\r\nconst getInitialState = (): {selectedIngredients: ReadonlyArray<TIngredient>} => {\r\n  return {\r\n    selectedIngredients: []\r\n  }\r\n}\r\n\r\nexport const ingredientCounterSlice = createSlice({\r\n  name: 'ingredientCounter',\r\n  initialState: getInitialState(),\r\n  reducers: {\r\n    counterIncrement: (state, action: PayloadAction<TIngredient>) => {\r\n      let copiedSelectedIngredients = [\r\n        ...state.selectedIngredients\r\n      ];\r\n      if (action.payload.type === 'bun') {\r\n        copiedSelectedIngredients = copiedSelectedIngredients.filter(ingredient => ingredient.type !== 'bun')\r\n      }\r\n      copiedSelectedIngredients.push(action.payload)\r\n      return {\r\n        ...state,\r\n        selectedIngredients: copiedSelectedIngredients\r\n      }\r\n    },\r\n    counterDecrement: (state, action: PayloadAction<string>) => {\r\n      let copiedSelectedIngredients = [\r\n        ...state.selectedIngredients\r\n      ];\r\n      const index = copiedSelectedIngredients.findIndex(item => item._id === action.payload) //id\r\n      if (index > -1) {\r\n        copiedSelectedIngredients.splice(index, 1)\r\n      } else {\r\n        console.log(`Error: Can not find itemWithId: ${action.payload}`)\r\n      }\r\n      return {\r\n        ...state,\r\n        selectedIngredients: copiedSelectedIngredients\r\n      }\r\n    },\r\n    counterClean: () => {\r\n      return getInitialState();\r\n    }\r\n  }\r\n})\r\n\r\nexport default ingredientCounterSlice.reducer;\r\n\r\nexport const {\r\n  counterIncrement,\r\n  counterDecrement,\r\n  counterClean\r\n} = ingredientCounterSlice.actions;\r\n\r\nexport const counterActions: ICounterActions = {\r\n  counterIncrement: counterIncrement,\r\n  counterDecrement: counterDecrement,\r\n  counterClean: counterClean\r\n}\r\n","import {AppDispatch, AppThunk, IOrderSliceState} from \"../types\";\r\n\r\nimport {getResponseData} from \"./api\";\r\n\r\nimport {getCookie, queryBurgerDataUrl} from \"../../utils/burger-data\";\r\nimport {TIngredient, TIngredientItem} from \"../types/data\";\r\nimport {burgerDataSlice} from \"../toolkit-slices/burger-data\";\r\nimport {orderSlice} from \"../toolkit-slices/order\";\r\nimport {burgerConstructorSlice} from \"../toolkit-slices/burger-constructor\";\r\nimport {ingredientCounterSlice} from \"../toolkit-slices/ingredient-counter\";\r\n\r\nconst actionsBurgerData = burgerDataSlice.actions;\r\nconst actionsOrder = orderSlice.actions;\r\nconst actionsConstructor = burgerConstructorSlice.actions;\r\nconst actionsIngredientCounter = ingredientCounterSlice.actions;\r\n\r\n// export const getBurgerDataFromServer = (): AppThunk<Promise<unknown>> => {\r\nexport const getBurgerDataFromServer = (): AppThunk => {\r\n  return function (dispatch: AppDispatch) {\r\n    // Проставим флаг в хранилище о том, что мы начали выполнять запрос\r\n    // Это нужно, чтоб отрисовать в интерфейсе лоудер или заблокировать\r\n    // ввод на время выполнения запроса\r\n    dispatch(actionsBurgerData.getBurgerData());\r\n\r\n    fetch(`${queryBurgerDataUrl}/ingredients`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(res => getResponseData<{ data: ReadonlyArray<TIngredient> }>(res))\r\n      .then(res => {\r\n        dispatch(actionsBurgerData.getBurgerDataSuccess(res.data)) // res.data - это payload в action внутри экшна getBurgerDataSuccess\r\n      })\r\n      .catch(error => {\r\n        dispatch(actionsBurgerData.getBurgerDataFailed({message: error.message}))\r\n      })\r\n  }\r\n}\r\n\r\nexport const doOrder = (ingredientsIdsList: ReadonlyArray<string>,\r\n                        order: {\r\n                          bun: TIngredient | null,\r\n                          ingredients: readonly TIngredientItem[]\r\n                        }): AppThunk => {\r\n  return function (dispatch: AppDispatch) {\r\n    const accessToken = getCookie('accessToken');\r\n\r\n    const isValidOrder = order.bun ? true : false\r\n\r\n    dispatch(actionsOrder.checkOrder(isValidOrder));\r\n\r\n    if (isValidOrder) {\r\n      dispatch(actionsOrder.getOrderData());\r\n\r\n      fetch(`${queryBurgerDataUrl}/orders`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'authorization': accessToken ? accessToken : ''// иначе accessToken не подходит по типу, т.к. м/б undefined\r\n        },\r\n        body: JSON.stringify({\r\n          \"ingredients\": ingredientsIdsList\r\n        })\r\n      })\r\n        .then(res => getResponseData<{ order: { number: number } }>(res))\r\n        .then(res => {\r\n          dispatch(actionsOrder.getOrderSuccess({\r\n            orderNumber: res.order.number,\r\n            order: ingredientsIdsList\r\n          } as IOrderSliceState))\r\n        })\r\n        .then(() => {\r\n          dispatch(actionsConstructor.cleanOrder());\r\n          dispatch(actionsIngredientCounter.counterClean());\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n          dispatch(actionsBurgerData.getBurgerDataFailed({message: error.message}))\r\n        });\r\n    }\r\n  }\r\n}\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nimport {IUserDataSliceState} from \"../types\";\r\nimport {TToken, TUserRefresh} from \"../types/data\";\r\nimport {IUserDataActions} from \"../types/action-type\";\r\n\r\nexport const userDataSlice = createSlice({\r\n  name: 'userData',\r\n  initialState: {\r\n    isUserLoading: false,\r\n    success: null,\r\n    user: {\r\n      email: \"\",\r\n      name: \"\"\r\n    },\r\n    accessToken: \"\",\r\n    refreshToken: \"\"\r\n  } as IUserDataSliceState,\r\n  reducers: {\r\n    getUserData: (state) => {\r\n      return {\r\n        ...state,\r\n        isUserLoading: true\r\n      }\r\n  },\r\n    setUserData: (state, action: PayloadAction<IUserDataSliceState>) => { // res.user\r\n      return {\r\n        ...state,\r\n        isUserLoading: false,\r\n        success: action.payload.success,\r\n        user: {\r\n          ...state.user,\r\n          name: action.payload.user.name,\r\n          email: action.payload.user.email\r\n        },\r\n        accessToken: action.payload.accessToken,\r\n        refreshToken: action.payload.refreshToken\r\n\r\n      }\r\n    },\r\n    setTokens: (state, action: PayloadAction<TToken>) => {\r\n      return {\r\n        ...state,\r\n        success: action.payload.success,\r\n        accessToken: action.payload.accessToken,\r\n        refreshToken: action.payload.refreshToken\r\n      }\r\n    },\r\n    refreshUserData: (state, action: PayloadAction<TUserRefresh>) => {\r\n      return {\r\n        ...state,\r\n        isUserLoading: false,\r\n        success: action.payload.success,\r\n        user: {\r\n          ...state.user,\r\n          name: action.payload.user.name,\r\n          email: action.payload.user.email\r\n        }\r\n      }\r\n    },\r\n    deleteUserData: (state) => {\r\n      return {\r\n        ...state,\r\n        user: {\r\n          email: \"\",\r\n          name: \"\"\r\n        },\r\n        accessToken: \"\",\r\n        refreshToken: \"\"\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport default userDataSlice.reducer\r\nexport const {\r\n  getUserData,\r\n  setUserData,\r\n  setTokens,\r\n  refreshUserData,\r\n  deleteUserData\r\n} = userDataSlice.actions\r\n\r\nexport const userDataActions: IUserDataActions = {\r\n  getUserData: getUserData,\r\n  setUserData: setUserData,\r\n  setTokens: setTokens,\r\n  refreshUserData: refreshUserData,\r\n  deleteUserData: deleteUserData\r\n}\r\n","import {AppDispatch, AppThunk, IUserDataSliceState} from \"../types\";\r\nimport {getCookie, queryBurgerDataUrl, setCookie} from \"../../utils/burger-data\";\r\nimport {TToken} from \"../types/data\";\r\nimport {getResponseData, throwOnError} from \"./api\";\r\nimport {userDataSlice} from \"../toolkit-slices/user-data\";\r\nconst actionsUserData = userDataSlice.actions;\r\n\r\nexport const getUser = (accessToken: string | undefined, retryOnErrorCount?: number): AppThunk => {\r\n  return function (dispatch: AppDispatch) {\r\n\r\n    dispatch(actionsUserData.getUserData());\r\n\r\n    return fetch(`${queryBurgerDataUrl}/auth/user`, {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'authorization': accessToken ? accessToken : ''// иначе accessToken не подходит по типу, т.к. м/б undefined\r\n      },\r\n      redirect: 'follow',\r\n      referrerPolicy: 'no-referrer',\r\n    })\r\n      .then(res => throwOnError<IUserDataSliceState>(res))\r\n      .then(data => {\r\n        // console.log(document.cookie)\r\n        if (data.success) {\r\n          dispatch(actionsUserData.refreshUserData(data))\r\n        }\r\n      })\r\n      .catch((errObj) => {\r\n        const err = JSON.parse(errObj.message);\r\n        const accessTokenExisting = getCookie('accessToken')\r\n        if (!accessTokenExisting || err.message === 'jwt expired') {\r\n          Promise.resolve(\r\n            dispatch(refreshAccessToken())\r\n          ).then(() => {\r\n            if (!retryOnErrorCount) { // retryOnErrorCount нужен: если токен так и не может успешно обновиться (refreshToken невалиден),\r\n              // есть только n попыток повторно вызвать getUser ниже - чтобы вызов getUser не зациклился до бесконечности\r\n              return\r\n            }\r\n            return dispatch(getUser(getCookie('accessToken'), (retryOnErrorCount - 1)))\r\n          }).catch((err) => console.log(err))\r\n        } else {\r\n          console.log(err)\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\nexport const refreshUserData = (accessToken: string | undefined,\r\n                                name: string, email: string,\r\n                                password: string): AppThunk => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch(actionsUserData.getUserData());\r\n\r\n    return fetch(`${queryBurgerDataUrl}/auth/user`, {\r\n      method: 'PATCH',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'authorization': accessToken ? accessToken : '' // иначе accessToken не подходит по типу, т.к. м/б undefined\r\n      },\r\n      redirect: 'follow',\r\n      referrerPolicy: 'no-referrer',\r\n      body: JSON.stringify({\r\n        \"name\": name,\r\n        \"email\": email,\r\n        \"password\": password\r\n      })\r\n    })\r\n      .then(res => getResponseData<IUserDataSliceState>(res))\r\n      .then(data => {\r\n        console.log(document.cookie)\r\n        if (data.success) {\r\n          dispatch(actionsUserData.refreshUserData(data));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n}\r\n\r\nexport const refreshAccessToken = (): AppThunk => {\r\n  return function (dispatch: AppDispatch) {\r\n    return fetch(`${queryBurgerDataUrl}/auth/token`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      redirect: 'follow',\r\n      referrerPolicy: 'no-referrer',\r\n      body: JSON.stringify({\r\n        \"token\": getCookie('refreshToken')\r\n      })\r\n    })\r\n      .then(res => getResponseData<TToken>(res))\r\n      .then(data => {\r\n        if (data.success) {\r\n          setCookie('accessToken', data.accessToken, {path: \"/\"})\r\n          setCookie('refreshToken', data.refreshToken, {path: \"/\"})\r\n          dispatch(actionsUserData.setTokens(data));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      });\r\n  }\r\n}\r\n","import React, {FunctionComponent, useMemo} from \"react\";\r\nimport {NavLink, Link, useHistory, withRouter} from \"react-router-dom\";\r\n\r\nimport headerStyle from \"./app-header.module.css\";\r\n\r\nimport {Logo} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {BurgerIcon, ListIcon, ProfileIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {useSelector} from \"../../services/types/hooks\";\r\n\r\n\r\nconst AppHeader: FunctionComponent = () => {\r\n  const {userData} = useSelector(state => {\r\n    return state\r\n  });\r\n\r\n  const history = useHistory();\r\n  const routePath = useMemo(() => history.location.pathname, [history.location]); // можно исп-ть хук useRouteMatch для выявления текущего маршрута\r\n\r\n  return (\r\n    <header className={`pt-4 pb-4 ${headerStyle.header}`}>\r\n      <div className={headerStyle['flex-wrapper']}>\r\n        <div className={`p-5 ${headerStyle['flex-container']}`}>\r\n          <NavLink to={{pathname: '/'}} exact={true}\r\n                   className={`ml-2 text text_type_main-default ${headerStyle.link}`}\r\n                   activeClassName={`ml-2 text text_type_main-default ${headerStyle.link} ${headerStyle.active}`}>\r\n            <div className=\"mr-2\">\r\n              <BurgerIcon type={routePath === '/' ? 'primary' : 'secondary'}/>\r\n            </div>\r\n            Конструктор\r\n          </NavLink>\r\n        </div>\r\n        <NavLink to={{pathname: '/feed'}} exact={true}\r\n                 className={`ml-2 text text_type_main-default ${headerStyle.link}`}\r\n                 activeClassName={`ml-2 text text_type_main-default ${headerStyle.link} ${headerStyle.active}`}>\r\n          <div className=\"mr-2\">\r\n            <ListIcon type={routePath === '/feed' ? 'primary' : 'secondary'}/>\r\n          </div>\r\n          Лента заказов\r\n        </NavLink>\r\n        <Link to=\"/\">\r\n          <Logo/>\r\n        </Link>\r\n      </div>\r\n      <div className={`p-5 ${headerStyle['flex-container']}`}>\r\n        <NavLink to={{pathname: '/profile'}}\r\n                 className={`ml-2 text text_type_main-default ${headerStyle.link}`}\r\n                 activeClassName={`ml-2 text text_type_main-default ${headerStyle.link} ${headerStyle.active}`}>\r\n          <div className=\"mr-2\">\r\n            <ProfileIcon\r\n              type={(routePath === \"/profile\") || (routePath === \"/profile/logout\") ? \"primary\" : \"secondary\"}/>\r\n          </div>\r\n          <div className={`${headerStyle['flex-nav-link']}`}>\r\n            <p className=\"text\">Личный кабинет</p>\r\n            <p className=\"text text_type_digits-default\">\r\n              {\r\n                userData.user.name === '' ? \"Star guest\" : `${userData.user.name}`\r\n              }\r\n            </p>\r\n          </div>\r\n        </NavLink>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default withRouter(AppHeader)\r\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n\r\nimport {IModalSliceState} from \"../types/index\";\r\nimport {TIngredient, TOrders} from \"../types/data\";\r\nimport {IModalActions} from \"../types/action-type\";\r\n\r\nexport const handleModalSlice = createSlice({\r\n  name: 'modalState',\r\n  initialState: {\r\n    modalsOpened: {},\r\n    ingredientForModal: null,\r\n  } as IModalSliceState,\r\n  reducers: {\r\n    setIngredientForModal: (state, action: PayloadAction<TIngredient | TOrders>) => {\r\n      return {\r\n        ...state,\r\n        ingredientForModal: action.payload // ingredient\r\n      }\r\n    },\r\n    handleModalOpen: (state, action: PayloadAction<{ [index: string]: boolean }>) => {\r\n      return {\r\n        ...state,\r\n        modalsOpened: action.payload\r\n      };\r\n    },\r\n    handleModalClose: (state) => {\r\n      return {\r\n        ...state,\r\n        modalsOpened: {}\r\n      };\r\n    },\r\n  }\r\n})\r\n\r\nexport default handleModalSlice.reducer\r\nexport const {\r\n  setIngredientForModal,\r\n  handleModalOpen,\r\n  handleModalClose\r\n} = handleModalSlice.actions\r\n\r\nexport const modalActions: IModalActions = {\r\n  setIngredientForModal: setIngredientForModal,\r\n  handleModalOpen: handleModalOpen,\r\n  handleModalClose: handleModalClose\r\n}\r\n","import React, {FunctionComponent} from 'react';\r\n\r\nimport {useDrag} from \"react-dnd\";\r\nimport {Counter, CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nimport ingredientsStyle from \"./ingredient.module.css\";\r\n\r\nimport {handleModalSlice} from \"../../services/toolkit-slices/modal\";\r\n\r\nimport {TDraggableIngredient} from \"../../services/types/data\";\r\nimport {useAppDispatch, useSelector} from \"../../services/types/hooks\";\r\n\r\nexport const Ingredient: FunctionComponent<TDraggableIngredient> = (props) => {\r\n\r\n  const {ingredientCounter} = useSelector(state => {\r\n    return state\r\n  })\r\n\r\n  const dispatch = useAppDispatch();\r\n  const actionsModal = handleModalSlice.actions;\r\n\r\n  const [{isDragging}, dragRef] = useDrag({\r\n    type: 'ingredient',\r\n    item: props.ingredient,\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  })\r\n\r\n  return (\r\n    <div ref={dragRef}\r\n         className={isDragging ? `${ingredientsStyle.dragging} ${ingredientsStyle.card}` : `${ingredientsStyle.card}`}\r\n         onClick={() => {\r\n             dispatch(actionsModal.setIngredientForModal(props.ingredient));\r\n             dispatch(actionsModal.handleModalOpen({\r\n               modalIngredientDetailsOpened: true\r\n             }));\r\n         }}\r\n         draggable>\r\n      {\r\n        ingredientCounter.selectedIngredients.includes(props.ingredient) &&\r\n        <Counter\r\n          count={props.ingredient.type === 'bun'\r\n            ? ingredientCounter.selectedIngredients.reduce((acc, cur) => cur === props.ingredient ? acc + 2 : acc, 0)\r\n            : ingredientCounter.selectedIngredients.reduce((acc, cur) => cur === props.ingredient ? acc + 1 : acc, 0)\r\n          }\r\n          size=\"default\"/>\r\n      }\r\n      <img src={props.image} alt={props.name} className=\"pr-4 pl-4\"/>\r\n      <div className={`pt-1 pb-1 ${ingredientsStyle.wrapper}`}>\r\n        <p className=\"text text_type_digits-default pr-2\">{props.price}</p>\r\n        <CurrencyIcon type=\"primary\"/>\r\n      </div>\r\n      <p className={`text text_type_main-default ${ingredientsStyle.text}`}>{props.name}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport {Link, useLocation} from \"react-router-dom\";\r\n\r\nimport burgerIngredientStyle from \"./ingredient-group.module.css\";\r\n\r\nimport {Ingredient} from \"../ingredients/ingredient\";\r\n\r\nimport {TIngredientGroup, TLocationState} from '../../services/types/data';\r\n\r\nexport const IngredientGroup = React.forwardRef<HTMLDivElement, TIngredientGroup>((props, ref) => {\r\n  let location = useLocation<TLocationState>();\r\n\r\n  return (\r\n    <div ref={ref}>\r\n      <h2 className=\"pt-10 text text_type_main-medium\">{props.groupName}</h2>\r\n      <div className={burgerIngredientStyle.grid}>\r\n        {\r\n          props.groupItems.map(burgerItem => (\r\n            <React.Fragment key={burgerItem._id}>\r\n              <Link to={{\r\n                pathname: `ingredient/${burgerItem._id}`,\r\n                state: {background: location}\r\n              }}\r\n                    className={`text text_type_main-medium ${burgerIngredientStyle.link}`}\r\n              >\r\n                <Ingredient ingredient={burgerItem}\r\n                            image={burgerItem.image} name={burgerItem.name}\r\n                            price={burgerItem.price}\r\n                            key={burgerItem._id}/>\r\n              </Link>\r\n            </React.Fragment>\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n","import React, {FunctionComponent, RefObject} from \"react\";\r\n\r\nimport ingredientsWrapper from './burger-ingredients.module.css';\r\n\r\nimport {IngredientGroup} from \"../ingredient-group/ingredient-group\";\r\nimport {ingredientTypeRuName} from \"../../utils/burger-data\";\r\n\r\nimport {Tab} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nimport {useSelector} from \"../../services/types/hooks\";\r\n\r\nexport const BurgerIngredients: FunctionComponent = () => {\r\n  const {burgerDataState} = useSelector(state => {\r\n    return state\r\n  });\r\n  const sauce = React.useRef<HTMLDivElement>(null);\r\n  const bun = React.useRef<HTMLDivElement>(null);\r\n  const filling = React.useRef<HTMLDivElement>(null);\r\n  const [tab, setActiveTab] = React.useState<string>('buns')\r\n\r\n  const scroll = (element: HTMLDivElement | null): void => {\r\n    if (element) {\r\n      element.scrollIntoView({behavior: \"smooth\", block: \"start\"});\r\n    }\r\n  }\r\n\r\n  const handleMouseScroll = React.useCallback((event: React.UIEvent): void => {\r\n      const mainTopPosition = event.currentTarget.getBoundingClientRect().top;\r\n\r\n      const getCurrentPosition = (ref: RefObject<HTMLDivElement | null>): DOMRect | undefined => {\r\n        if (null !== ref.current) {\r\n          return ref.current.getBoundingClientRect();\r\n        }\r\n      }\r\n\r\n      const isVisibleArea = (rectangle: DOMRect | undefined): boolean | undefined => {\r\n        if (undefined !== rectangle) {\r\n          return (\r\n            rectangle.top - mainTopPosition / 2 <= mainTopPosition\r\n            && rectangle.bottom - mainTopPosition / 2 > mainTopPosition\r\n          )\r\n        }\r\n      }\r\n\r\n      const saucePosition = getCurrentPosition(sauce);\r\n      const fillingPosition = getCurrentPosition(filling);\r\n\r\n      if (isVisibleArea(saucePosition)) {\r\n        setActiveTab(\"sauces\")\r\n      } else if (isVisibleArea(fillingPosition)) {\r\n        setActiveTab(\"filling\")\r\n      } else {\r\n        setActiveTab(\"buns\")\r\n      }\r\n    },\r\n    []\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className={ingredientsWrapper.burgerIngredients}>\r\n        <div className={`pt-5 ${ingredientsWrapper.tab}`}>\r\n          <Tab value=\"buns\" active={tab === 'buns'}\r\n               onClick={(value) => {\r\n                 setActiveTab(value);\r\n                 scroll(bun.current)\r\n               }}>\r\n            Булки\r\n          </Tab>\r\n\r\n          <Tab value=\"sauces\" active={tab === 'sauces'}\r\n               onClick={(value) => {\r\n                 setActiveTab(value);\r\n                 scroll(sauce.current)\r\n               }}>\r\n            Соусы\r\n          </Tab>\r\n\r\n          <Tab value=\"filling\" active={tab === 'filling'}\r\n               onClick={(value) => {\r\n                 setActiveTab(value);\r\n                 scroll(filling.current)\r\n               }}>\r\n            Начинки\r\n          </Tab>\r\n        </div>\r\n\r\n        {\r\n          <div className={ingredientsWrapper.layout} onScroll={(event) => {\r\n            handleMouseScroll(event)\r\n          }}>\r\n            <IngredientGroup groupName={ingredientTypeRuName.bun}\r\n                             groupItems={\r\n                               burgerDataState.burgerData.filter(burgerItem => burgerItem.type === 'bun')\r\n                             }\r\n                             ref={bun}\r\n\r\n            />\r\n            <IngredientGroup groupName={ingredientTypeRuName.sauce}\r\n                             groupItems={\r\n                               burgerDataState.burgerData.filter(burgerItem => burgerItem.type === 'sauce')\r\n                             }\r\n                             ref={sauce}\r\n            />\r\n            <IngredientGroup groupName={ingredientTypeRuName.main}\r\n                             groupItems={\r\n                               burgerDataState.burgerData.filter(burgerItem => burgerItem.type === 'main')\r\n                             }\r\n                             ref={filling}\r\n            />\r\n          </div>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.81f3c4ef.svg\";","import React, {FunctionComponent, useRef} from 'react';\r\nimport {useDrag, useDrop, DropTargetMonitor} from 'react-dnd';\r\nimport { XYCoord } from 'dnd-core';\r\n\r\nimport {burgerConstructorSlice} from \"../../services/toolkit-slices/burger-constructor\";\r\nimport {ingredientCounterSlice} from \"../../services/toolkit-slices/ingredient-counter\";\r\n\r\nimport {ConstructorElement, DragIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nimport burgerConstructor from \"../burger-constructor/burger-constructor.module.css\";\r\nimport draggableElement from \"./constructor-element-draggable.module.css\";\r\n\r\nimport {TDraggableElement} from \"../../services/types/data\";\r\nimport {useAppDispatch} from \"../../services/types/hooks\";\r\n\r\nexport const ConstructorElementDraggable: FunctionComponent<TDraggableElement> = (props) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const actionsConstructor = burgerConstructorSlice.actions;\r\n  const actionsIngredientCounter = ingredientCounterSlice.actions;\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const [{isDragging}, dragRef] = useDrag({\r\n    type: 'index',\r\n    item: () => {\r\n      return {index: props.index}\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    })\r\n  })\r\n\r\n  const moveIngredientsListItem =\r\n    (dragIndex: number, hoverIndex: number) => {\r\n      dispatch(actionsConstructor.setIngredientToDrag({dragIndex: dragIndex, hoverIndex: hoverIndex}))\r\n    }\r\n\r\n  const [{isOver}, dropSortRef] = useDrop({\r\n    accept: 'index',\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver()\r\n    }),\r\n    hover: (item: { index: number }, monitor: DropTargetMonitor) => {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      const dragIndex = item.index\r\n      const hoverIndex = props.index\r\n\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n\r\n      const hoverBoundingRect = ref.current.getBoundingClientRect();\r\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n      // const hoverActualY = monitor.getClientOffset().y - hoverBoundingRect.top;\r\n      const clientOffset = monitor.getClientOffset();\r\n      const hoverActualY =(clientOffset as XYCoord).y - hoverBoundingRect.top;\r\n      // if dragging down, continue only when hover is smaller than middle Y\r\n      if (dragIndex < hoverIndex && hoverActualY < hoverMiddleY) return;\r\n      // if dragging up, continue only when hover is bigger than middle Y\r\n      if (dragIndex > hoverIndex && hoverActualY > hoverMiddleY) return;\r\n\r\n      moveIngredientsListItem(dragIndex, hoverIndex);\r\n      item.index = hoverIndex;\r\n    }\r\n  })\r\n\r\n//  const dragDropRef = dragRef(dropSortRef(ref));\r\n  dragRef(dropSortRef(ref));\r\n\r\n  return (\r\n    <div ref={ref}\r\n         className={isDragging ? `${burgerConstructor.wrapper} ${draggableElement.dragging}`\r\n           : isOver ? `${burgerConstructor.wrapper} ${draggableElement.over}`\r\n             : `${burgerConstructor.wrapper}`}>\r\n      <div className=\"mr-1\">\r\n        <DragIcon type=\"primary\"/>\r\n      </div>\r\n      <ConstructorElement\r\n        text={props.itemWithId.item.name}\r\n        price={props.itemWithId.item.price}\r\n        thumbnail={props.itemWithId.item.image}\r\n        handleClose={() => {\r\n          dispatch(actionsConstructor.deleteIngredientFromOrder(props.itemWithId.uniqueId));\r\n          dispatch(actionsIngredientCounter.counterDecrement(props.itemWithId.item._id));\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n// ConstructorElementDraggable.propTypes = {\r\n//   index: PropTypes.number.isRequired,\r\n//   itemWithId: PropTypes.shape({\r\n//     uniqueId: PropTypes.string.isRequired,\r\n//     item: PropTypes.shape({\r\n//       name: PropTypes.string.isRequired,\r\n//       price: PropTypes.number.isRequired,\r\n//       image: PropTypes.string.isRequired,\r\n//       _id: PropTypes.string.isRequired\r\n//     })\r\n//   }).isRequired\r\n// }\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nimport {ITotalPriceSliceState} from \"../types/index\";\r\nimport {ITotalPriceActions} from \"../types/action-type\";\r\n\r\nexport const totalPriceSlice = createSlice({\r\n  name: 'totalPrice',\r\n  initialState: {\r\n    totalSendingOrderPrice: null,\r\n    totalFeedOrderPrice: null\r\n  } as ITotalPriceSliceState,\r\n  reducers: {\r\n    setTotalSendingOrderPrice: (state, action: PayloadAction<number | null>) => {\r\n      return {\r\n        ...state,\r\n        totalSendingOrderPrice: action.payload // calculateTotalPriceTotalSendingOrderPrice()\r\n      }\r\n    },\r\n    setTotalFeedOrderPrice: (state, action: PayloadAction<number | null>) => {\r\n      return {\r\n        ...state,\r\n        totalFeedOrderPrice: action.payload\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport default totalPriceSlice.reducer\r\nexport const {\r\n  setTotalSendingOrderPrice,\r\n  setTotalFeedOrderPrice\r\n} = totalPriceSlice.actions\r\n\r\nexport const totalPriceActions: ITotalPriceActions = {\r\n  setTotalSendingOrderPrice: setTotalSendingOrderPrice,\r\n  setTotalFeedOrderPrice: setTotalFeedOrderPrice\r\n}\r\n","import React, {FunctionComponent} from 'react';\r\nimport {useDrop} from \"react-dnd\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport {doOrder} from \"../../services/actions/burger-data\";\r\n\r\nimport burgerConstructor from \"./burger-constructor.module.css\";\r\nimport bunImage from '../../images/logo.svg';\r\n\r\nimport {ConstructorElementDraggable} from '../constructor-element-draggable/constructor-element-draggable';\r\nimport {burgerConstructorSlice} from \"../../services/toolkit-slices/burger-constructor\";\r\nimport {handleModalSlice} from \"../../services/toolkit-slices/modal\";\r\nimport {ingredientCounterSlice} from \"../../services/toolkit-slices/ingredient-counter\"\r\nimport {totalPriceSlice} from \"../../services/toolkit-slices/total-price\";\r\n\r\nimport {ConstructorElement, CurrencyIcon, Button} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nimport {TIngredient} from \"../../services/types/data\";\r\nimport {useAppDispatch, useSelector} from \"../../services/types/hooks\";\r\nimport {calculateTotalPrice} from \"../../utils/burger-data\";\r\n\r\nexport const BurgerConstructor: FunctionComponent = () => {\r\n\r\n  const {burgerConstructorIngredients, totalPrice, userData} = useSelector(state => {\r\n    return state\r\n  });\r\n  const dispatch = useAppDispatch();\r\n\r\n  const actionsConstructor = burgerConstructorSlice.actions;\r\n  const actionsModal = handleModalSlice.actions;\r\n  const actionsTotalSendingOrderPrice = totalPriceSlice.actions;\r\n  const actionsIngredientCounter = ingredientCounterSlice.actions;\r\n\r\n  const history = useHistory();\r\n  const login = React.useCallback(() => {\r\n      history.replace({ pathname: '/login' });\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const createCommonArrayOfIngredientsIds = () => {\r\n    const commonArrayOfIngredientsIds = burgerConstructorIngredients.ingredients.map(itemWithId => itemWithId.item._id);\r\n    if (burgerConstructorIngredients.bun) {\r\n      commonArrayOfIngredientsIds.unshift(burgerConstructorIngredients.bun._id);\r\n    }\r\n    return commonArrayOfIngredientsIds;\r\n  }\r\n\r\n  const calculateTotalPriceTotalSendingOrderPriceCallback = React.useCallback(() => {\r\n    return calculateTotalPrice(burgerConstructorIngredients.bun, burgerConstructorIngredients.ingredients.map(ingredientItem => ingredientItem.item));\r\n  }, [burgerConstructorIngredients.bun, burgerConstructorIngredients.ingredients])\r\n\r\n  const [{isOver}, dropRef] = useDrop({\r\n    accept: 'ingredient',\r\n    drop: (item: TIngredient) => {\r\n      dispatch(actionsConstructor.addIngredientToOrder(item));\r\n      dispatch(actionsIngredientCounter.counterIncrement(item))\r\n    },\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver()\r\n    })\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    dispatch(actionsTotalSendingOrderPrice.setTotalSendingOrderPrice(calculateTotalPriceTotalSendingOrderPriceCallback()))\r\n  }, [burgerConstructorIngredients, dispatch, actionsTotalSendingOrderPrice, calculateTotalPriceTotalSendingOrderPriceCallback])\r\n\r\n  return (\r\n    <div ref={dropRef}\r\n         className={burgerConstructor.container}>\r\n      <div className={isOver ? `${burgerConstructor.top} ${burgerConstructor.overbun}` : `${burgerConstructor.top}`}>\r\n        {\r\n          burgerConstructorIngredients.bun\r\n            ? Array.of(burgerConstructorIngredients.bun).map(item => (\r\n              <ConstructorElement\r\n                type=\"top\"\r\n                isLocked={true}\r\n                text={`${item.name} (верх)`}\r\n                price={item.price}\r\n                thumbnail={item.image}\r\n                key={`top:${item._id}`}\r\n              />\r\n            ))\r\n            : <ConstructorElement\r\n              type=\"top\"\r\n              isLocked={true}\r\n              text=\"Перетащите сюда булку из списка слева (верх)\"\r\n              price={0}\r\n              thumbnail={bunImage}\r\n            />\r\n        }\r\n      </div>\r\n\r\n      <div\r\n        className={isOver ? `${burgerConstructor.constructor} ${burgerConstructor.overingredient}` : `${burgerConstructor.constructor}`}>\r\n        {\r\n          burgerConstructorIngredients.ingredients && burgerConstructorIngredients.ingredients.map((itemWithId, index) => (\r\n            <ConstructorElementDraggable\r\n              key={itemWithId.uniqueId}\r\n              itemWithId={itemWithId}\r\n              index={index}/>\r\n          ))}\r\n      </div>\r\n\r\n      <div\r\n        className={isOver ? `${burgerConstructor.bottom} ${burgerConstructor.overbun}` : `${burgerConstructor.bottom}`}>\r\n        {\r\n          burgerConstructorIngredients.bun\r\n            ? Array.of(burgerConstructorIngredients.bun)\r\n              .map((item) => (\r\n                <ConstructorElement\r\n                  type=\"bottom\"\r\n                  isLocked={true}\r\n                  text={`${item.name} (низ)`}\r\n                  price={item.price}\r\n                  thumbnail={item.image}\r\n                  key={`bottom:${item._id}`}\r\n                />\r\n              ))\r\n            : <ConstructorElement\r\n              type=\"bottom\"\r\n              isLocked={true}\r\n              text=\"Перетащите сюда булку из списка слева (низ)\"\r\n              price={0}\r\n              thumbnail={bunImage}\r\n            />\r\n        }\r\n      </div>\r\n      <div className={burgerConstructor.order}>\r\n        <h2 className=\"text text_type_digits-medium mr-2\">\r\n          {totalPrice.totalSendingOrderPrice}\r\n        </h2>\r\n        <div className={burgerConstructor.icon}>\r\n          <CurrencyIcon type=\"primary\"/>\r\n        </div>\r\n        <div className=\"ml-10\">\r\n          <Button type=\"primary\" size=\"large\" onClick={() => {\r\n            login(); // исп-е useHistory для авторизации польз-ля перед отправкой заказа\r\n            if (userData.user.name !== '' && userData.user.email !== ''){\r\n              dispatch(doOrder(createCommonArrayOfIngredientsIds(), burgerConstructorIngredients));\r\n              dispatch(actionsModal.handleModalOpen({\r\n                modalOrderNumberDetailsOpened: true\r\n              }));\r\n            }\r\n          }}>\r\n            Оформить заказ\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\n\r\nimport modalOverlayStyle from './modal-overlay.module.css';\r\n\r\nimport {TModalOverlay} from \"../../services/types/data\";\r\n\r\n\r\nexport const ModalOverlay: FunctionComponent<TModalOverlay> = (props) => {\r\n   return (\r\n    <div className={modalOverlayStyle.overlay} onClick={() => {\r\n      props.handleOnClose();\r\n    }}>\r\n    </div>\r\n  )\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport modalStyle from \"./modal.module.css\";\r\n\r\nimport {ModalOverlay} from \"../modal-overlay/modal-overlay\";\r\n\r\nimport {CloseIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {TModal} from \"../../services/types/data\";\r\n\r\nconst modalRoot = document.getElementById(\"modal\");\r\n\r\nexport const Modal: FunctionComponent<TModal> = (props)=> {\r\n\r\n  const handleEscClose = React.useCallback((evt: KeyboardEvent): void => {\r\n    if (evt.key === 'Escape') {\r\n      props.handleOnClose();\r\n    }\r\n  }, [props])\r\n\r\n  React.useEffect(() => {\r\n    // Устанавливаем слушатель события при монтировании\r\n    document.addEventListener(\"keydown\", handleEscClose)\r\n    // Сбрасываем слушатель события при удалении компонента из DOM\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleEscClose)\r\n    }\r\n  }, [handleEscClose]) // обязательно прописать зависимости, чтобы избежать повтороного рендеринга\r\n\r\n  if (modalRoot !== null) {\r\n    return ReactDOM.createPortal(\r\n      (\r\n        <>\r\n          <ModalOverlay handleOnClose={props.handleOnClose}/>\r\n\r\n          <div className={modalStyle.modal} onClick={(evt) => {\r\n            evt.stopPropagation()\r\n          }}>\r\n            <div className={modalStyle.cross} onClick={() => {\r\n              props.handleOnClose();\r\n            }}>\r\n              <CloseIcon type=\"primary\"/>\r\n            </div>\r\n            {props.children}\r\n          </div>\r\n        </>\r\n      ),\r\n      modalRoot\r\n    )\r\n  } else return null // нужно для установки типа всего компонента: из него могут вернуться только либо jsx, либо null\r\n}\r\n","import React, {FunctionComponent} from 'react';\r\n\r\nimport {useSelector} from \"../../services/types/hooks\";\r\n\r\nimport orderNumberDetailsStyle from \"./order-number-details.module.css\";\r\n\r\nimport {CheckMarkIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nexport const OrderNumberDetails: FunctionComponent = () => {\r\n  const {orderState} = useSelector(state => {\r\n    return state\r\n  });\r\n\r\n  if (orderState.isLoading) {\r\n    return (\r\n      <div className={orderNumberDetailsStyle.wrapper}>\r\n        <h2 className={`mb-10 text text_type_main-large ${orderNumberDetailsStyle.digits}`}>Отправляем заказ...</h2>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      orderState.isValidOrder && !orderState.isLoading && orderState.orderNumber\r\n        ? <div className={orderNumberDetailsStyle.wrapper}>\r\n          <h2 className={`text text_type_digits-large ${orderNumberDetailsStyle.digits}`}>{orderState.orderNumber}</h2>\r\n          <p className=\"mt-8 text text_type_main-default\">идентификатор заказа</p>\r\n          <div className={orderNumberDetailsStyle.shadow}>\r\n            <CheckMarkIcon type=\"primary\"/>\r\n          </div>\r\n          <p className=\"text text_type_main-default\">Ваш заказ начали готовить</p>\r\n          <p className=\"mt-2 text text_type_main-default text_color_inactive\">Дождитесь готовности на орбитальной\r\n            станции</p>\r\n        </div>\r\n        : <div className={orderNumberDetailsStyle.wrapper}>\r\n          <h2 className={`mb-10 text text_type_digits-large ${orderNumberDetailsStyle.digits}`}>X_X</h2>\r\n          <p className=\"text text_type_main-default\">Бургер без булки - это даже не пицца!</p>\r\n          <p className=\"mt-2 text text_type_main-default text_color_inactive\">Пожалуйста, выберите какую-нибудь булку, и\r\n            мы приготовим бургер, даже если в нем не будет ничего, кроме нее!</p>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\nimport {DndProvider} from \"react-dnd\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\n\r\nimport ingredientsWrapper from \"../../components/burger-ingredients/burger-ingredients.module.css\";\r\n\r\nimport {BurgerIngredients} from \"../../components/burger-ingredients/burger-ingredients\";\r\nimport {BurgerConstructor} from \"../../components/burger-constructor/burger-constructor\";\r\nimport {Modal} from \"../../components/modal/modal\";\r\nimport {OrderNumberDetails} from \"../../components/order-number-details/order-number-details\";\r\n\r\nimport {useAppDispatch, useSelector} from \"../../services/types/hooks\";\r\nimport {handleModalSlice} from \"../../services/toolkit-slices/modal\";\r\n\r\nexport const BurgerConstructorPage: FunctionComponent = () => {\r\n  const {burgerDataState, modalState} = useSelector(state => {\r\n    return state\r\n  });\r\n\r\n  const dispatch = useAppDispatch();\r\n  const actionsModal = handleModalSlice.actions;\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text text_type_main-large\">Соберите бургер</h1>\r\n      <div className={ingredientsWrapper.section}>\r\n\r\n        <DndProvider backend={HTML5Backend}>\r\n          {\r\n            burgerDataState &&\r\n            <BurgerIngredients/>\r\n          }\r\n\r\n          <BurgerConstructor/>\r\n        </DndProvider>\r\n\r\n        {\r\n          modalState.modalsOpened.modalOrderNumberDetailsOpened &&\r\n          <Modal handleOnClose={() => {\r\n            dispatch(actionsModal.handleModalClose());\r\n          }}>\r\n            <OrderNumberDetails/>\r\n          </Modal>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\n\r\nimport { EmailInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {TInputDefault} from \"../../services/types/data\";\r\n\r\nexport const EmailInputComponent: FunctionComponent<TInputDefault> = (props) => {\r\n  return <EmailInput onChange={props.onChange} size={undefined} value={props.value} name={'email'} />\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\n\r\nimport { PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {TInputDefault} from \"../../services/types/data\";\r\n\r\nexport const PasswordInputComponent: FunctionComponent<TInputDefault> = (props) => {\r\n  return <PasswordInput onChange={props.onChange} size={\"default\"} value={props.value} name={'password'} />\r\n}\r\n","import {AppDispatch, AppThunk, IUserDataSliceState} from \"../types\";\r\nimport {deleteCookie, getCookie, queryBurgerDataUrl, setCookie} from \"../../utils/burger-data\";\r\nimport {getResponseData} from \"./api\";\r\nimport {burgerDataSlice} from \"../toolkit-slices/burger-data\";\r\nimport {userDataSlice} from \"../toolkit-slices/user-data\";\r\n\r\nconst actionsBurgerData = burgerDataSlice.actions;\r\nconst actionsUserData = userDataSlice.actions;\r\n\r\nexport const register = (name: string, email: string, password: string): AppThunk => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch(actionsUserData.getUserData());\r\n\r\n    fetch(`${queryBurgerDataUrl}/auth/register`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      redirect: 'follow',\r\n      referrerPolicy: 'no-referrer',\r\n      body: JSON.stringify({\r\n        \"name\": name,\r\n        \"email\": email,\r\n        \"password\": password\r\n      })\r\n    })\r\n      .then(res => getResponseData<IUserDataSliceState>(res))\r\n      .then(data => {\r\n        if (data.success) {\r\n          setCookie('accessToken', data.accessToken)\r\n          setCookie('refreshToken', data.refreshToken)\r\n          dispatch(actionsUserData.setUserData(data));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        dispatch(actionsBurgerData.getBurgerDataFailed({message: error.message}))\r\n      });\r\n  }\r\n}\r\n\r\nexport const authorise = (email: string, password: string): AppThunk => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch(actionsUserData.getUserData());\r\n\r\n    return fetch(`${queryBurgerDataUrl}/auth/login`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      redirect: 'follow',\r\n      referrerPolicy: 'no-referrer',\r\n      body: JSON.stringify({\r\n        \"email\": email,\r\n        \"password\": password\r\n      })\r\n    })\r\n      .then(res => getResponseData<IUserDataSliceState>(res))\r\n      .then(data => {\r\n        if (data.success) {\r\n          setCookie('accessToken', data.accessToken)\r\n          setCookie('refreshToken', data.refreshToken)\r\n          dispatch(actionsUserData.setUserData(data));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        dispatch(actionsBurgerData.getBurgerDataFailed({message: error.message}))\r\n      });\r\n  }\r\n}\r\n\r\nexport const logout = (): AppThunk => {\r\n  return function (dispatch: AppDispatch) {\r\n    return fetch(`${queryBurgerDataUrl}/auth/logout`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      redirect: 'follow',\r\n      referrerPolicy: 'no-referrer',\r\n      body: JSON.stringify({\r\n        \"token\": getCookie('refreshToken')\r\n      })\r\n    })\r\n      .then(res => getResponseData<{ success: boolean, message: string }>(res))\r\n      .then(() => {\r\n        deleteCookie('accessToken')\r\n        deleteCookie('refreshToken')\r\n        dispatch(actionsUserData.deleteUserData());\r\n\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n","import React, {ChangeEvent, FunctionComponent} from \"react\";\r\nimport {Link, Redirect, useLocation} from \"react-router-dom\";\r\n\r\nimport authPage from \"./authorisation-page.module.css\";\r\n\r\nimport {EmailInputComponent} from \"../../components/email-input/email-input\";\r\nimport {PasswordInputComponent} from \"../../components/password-input/password-input\";\r\n\r\nimport {Button} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {authorise} from \"../../services/actions/auth\";\r\nimport {useAppDispatch, useSelector} from \"../../services/types/hooks\";\r\nimport {TLocationState} from \"../../services/types/data\";\r\n\r\nexport const AuthorisationPage: FunctionComponent = () => {\r\n  const {userData} = useSelector(state => {\r\n    return state\r\n  });\r\n\r\n  const [email, setEmail] = React.useState<string>('');\r\n  const [password, setPassword] = React.useState<string>('');\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const location = useLocation<TLocationState>();\r\n\r\n  if (userData.user.name !== '' && userData.user.email !== '') {\r\n    return (\r\n      <Redirect\r\n        // to={`${location.state?.from?.pathname}` || '/' }/> - тоже работает О_о\r\n        to={location.state?.from || '/' }\r\n      />\r\n    );\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className={authPage.wrapper} onSubmit={(e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        dispatch(authorise(email, password));\r\n      }}>\r\n        <h2 className=\"text text_type_main-medium\">Вход</h2>\r\n        <EmailInputComponent value={email} onChange={(e: ChangeEvent<HTMLInputElement>) => {\r\n          setEmail(e.target.value)\r\n        }}/>\r\n        <PasswordInputComponent value={password} onChange={(e: ChangeEvent<HTMLInputElement>) => {\r\n          setPassword(e.target.value)\r\n        }}/>\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Войти\r\n        </Button>\r\n      </form>\r\n      <div className={authPage.text}>\r\n        <div className={authPage.textWrapper}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            Вы — новый пользователь?\r\n            <Link to=\"/register\"\r\n                  className={`ml-2 text text_type_main-default text_color_inactive ${authPage.link}`}>Зарегистрироваться\r\n            </Link>\r\n          </p>\r\n        </div>\r\n        <div className={authPage.textWrapper}>\r\n          <p className=\"mt-4 text text_type_main-default text_color_inactive\">\r\n            Забыли пароль?\r\n            <Link to=\"/forgot-password\"\r\n                  className={`ml-2 text text_type_main-default text_color_inactive ${authPage.link}`}>Восстановить пароль\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\n\r\nimport {Input} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {TInputDefault} from \"../../services/types/data\";\r\nimport {TICons} from \"@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons\";\r\nimport {validateInputDefault} from \"../../utils/form-validation\";\r\n\r\nexport const InputDefault: FunctionComponent<TInputDefault> = (props) => {\r\n  const [icon, changeIcon] = React.useState<keyof TICons | undefined>(props.icon);\r\n  const [inputType, changeInputType] = React.useState<'text' | 'email' | 'password' | undefined>(props.type);\r\n\r\n  const inputRef = React.useRef<HTMLInputElement>(null);\r\n\r\n  const onIconClick = () => {\r\n    setTimeout(() => {\r\n      if (null !== inputRef.current) {\r\n        return inputRef.current.focus(), 0;\r\n      }\r\n    })\r\n    // alert('Вы уверены?')\r\n    if (icon === 'ShowIcon') {\r\n      changeIcon('HideIcon');\r\n      changeInputType('text');\r\n    } else if (icon === 'HideIcon') {\r\n      changeIcon('ShowIcon');\r\n      changeInputType('password');\r\n    }\r\n  }\r\n\r\n  const inputError = validateInputDefault(inputType, props.value);\r\n\r\n  return (\r\n    <Input\r\n      type={inputType}\r\n      placeholder={props.placeholder}\r\n      onChange={props.onChange}\r\n      value={props.value}\r\n      name={'name'}\r\n      error={inputError.error}\r\n      ref={inputRef}\r\n      icon={icon}\r\n      onIconClick={onIconClick}\r\n      errorText={inputError.errorMessage}\r\n      size={'default'}\r\n    />\r\n  )\r\n}\r\n","export const validateInputDefault = (type: 'text' | 'email' | 'password' | undefined, value: string) => {\r\n  const inputError: { error: boolean, errorMessage: string } = {\r\n    error: false,\r\n    errorMessage: ''\r\n  }\r\n  switch (type) {\r\n    case \"text\":\r\n      if (value !== \"\" && value.length < 2) {\r\n        inputError.error = true;\r\n        inputError.errorMessage = 'Это поле должно содержать хотя бы 2 символа'\r\n      }\r\n      break;\r\n    case \"email\":\r\n      //if (value !== \"\" && ((!value.includes('@')) || (value.length < 6))) {\r\n      // регулярное выражение: в поле маила д/б: текст-@-текст-.-текст\r\n      if (value !== \"\" && !value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\r\n        inputError.error = true;\r\n        inputError.errorMessage = 'Укажите корректный e-mail'\r\n      }\r\n      break;\r\n    case \"password\":\r\n      if (value !== \"\" && value.length < 6) {\r\n        inputError.error = true;\r\n        inputError.errorMessage = 'Пароль должен состоять не менее чем из 6 символов'\r\n      }\r\n      break;\r\n    default:\r\n      console.log(\"Неопознанный тип поля ввода\")\r\n      break;\r\n  }\r\n  return inputError;\r\n}\r\n","import React, {ChangeEvent, FunctionComponent} from \"react\";\r\nimport {Link, Redirect, useLocation} from \"react-router-dom\";\r\n\r\nimport regPage from \"./register-page.module.css\";\r\nimport {EmailInputComponent} from \"../../components/email-input/email-input\";\r\nimport {PasswordInputComponent} from \"../../components/password-input/password-input\";\r\n\r\nimport {InputDefault} from \"../../components/input-default/input-default\";\r\nimport {register} from \"../../services/actions/auth\";\r\nimport {useAppDispatch, useSelector} from \"../../services/types/hooks\";\r\n\r\nimport {Button} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nexport const RegistrationPage: FunctionComponent = () => {\r\n  const {userData} = useSelector(state => {\r\n    return state\r\n  });\r\n\r\n  const [name, setName] = React.useState<string>('');\r\n  const [email, setEmail] = React.useState<string>('');\r\n  const [password, setPassword] = React.useState<string>('');\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const location: { state: {from: Location} } = useLocation();\r\n\r\n  if (userData.user.name !== '' && userData.user.email !== '') {\r\n    return (\r\n      <Redirect\r\n        to={location.state?.from || '/' }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className={regPage.wrapper} onSubmit={(e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        dispatch(register(name, email, password));\r\n      }}>\r\n        <h2 className=\"text text_type_main-medium\">Регистрация</h2>\r\n        <InputDefault placeholder={'Имя'} value={name} onChange={e => setName(e.target.value)} type='text'/>\r\n        <EmailInputComponent value={email} onChange={(e: ChangeEvent<HTMLInputElement>) => {\r\n          setEmail(e.target.value)\r\n        }}/>\r\n        <PasswordInputComponent value={password} onChange={(e: ChangeEvent<HTMLInputElement>) => {\r\n          setPassword(e.target.value)}}/>\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Зарегистрироваться\r\n        </Button>\r\n      </form>\r\n      <div className={regPage.text}>\r\n        <div className={regPage.textWrapper}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            Уже зарегистрированы?\r\n            <Link to=\"/login\"\r\n                  className={`ml-2 text text_type_main-default text_color_inactive ${regPage.link}`}>Войти\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nimport {IForgotPasswordMarker} from \"../types\";\r\nimport {IResetPasswordActions} from \"../types/action-type\";\r\n\r\nexport const forgotPasswordMarkerSlice = createSlice({\r\n  name: 'forgotPassword',\r\n  initialState: {\r\n    emailWasSent: false\r\n  } as IForgotPasswordMarker,\r\n  reducers: {\r\n    setEmailSentMarker: (state) => {\r\n      return {\r\n        ...state,\r\n        emailWasSent: true\r\n      }\r\n    },\r\n    deleteEmailSentMarker: (state) => {\r\n      return {\r\n        ...state,\r\n        emailWasSent: false\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport default forgotPasswordMarkerSlice.reducer\r\nexport const {\r\n  setEmailSentMarker,\r\n  deleteEmailSentMarker\r\n} = forgotPasswordMarkerSlice.actions\r\n\r\nexport const resetPasswordActions: IResetPasswordActions = {\r\n  setEmailSentMarker: setEmailSentMarker,\r\n  deleteEmailSentMarker: deleteEmailSentMarker\r\n}\r\n","import {AppDispatch, AppThunk} from \"../types\";\r\nimport {queryBurgerDataUrl} from \"../../utils/burger-data\";\r\nimport {getResponseData} from \"./api\";\r\nimport {forgotPasswordMarkerSlice} from \"../toolkit-slices/reset-password-marker\";\r\n\r\nconst actionsForgotPasswordMarker = forgotPasswordMarkerSlice.actions;\r\n\r\nexport const requestToResetPassword = (email: string, redirectToChangePWPage: () => void): AppThunk => {\r\n  return function (dispatch: AppDispatch) {\r\n\r\n    return fetch(`${queryBurgerDataUrl}/password-reset`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      redirect: 'follow',\r\n      referrerPolicy: 'no-referrer',\r\n      body: JSON.stringify({\r\n        \"email\": email\r\n      })\r\n    })\r\n      .then(res => getResponseData<{ success: boolean, message: string }>(res))\r\n      .then((res) => {\r\n        if (res.success) {\r\n          dispatch(actionsForgotPasswordMarker.setEmailSentMarker());\r\n        }\r\n      })\r\n      .then(() => {\r\n        redirectToChangePWPage();\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const changePassword = (password: string, token: string): AppThunk => {\r\n  return function (dispatch: AppDispatch) {\r\n    return fetch(`${queryBurgerDataUrl}/password-reset/reset`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      redirect: 'follow',\r\n      referrerPolicy: 'no-referrer',\r\n      body: JSON.stringify({\r\n        \"password\": password,\r\n        \"token\": token\r\n      })\r\n    })\r\n      .then(res => getResponseData<{ success: boolean, message: string }>(res))\r\n      .then(response => {\r\n        if (response.success) {\r\n          dispatch(actionsForgotPasswordMarker.deleteEmailSentMarker())\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\nimport {Link, Redirect, useHistory, useLocation} from \"react-router-dom\";\r\n\r\nimport forgotPWPage from \"./forgot-password-page.module.css\";\r\n\r\nimport {InputDefault} from \"../../components/input-default/input-default\";\r\nimport {requestToResetPassword} from \"../../services/actions/change-password\";\r\n\r\nimport {useAppDispatch, useSelector} from \"../../services/types/hooks\";\r\n\r\nimport {Button} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nexport const ForgotPasswordPage: FunctionComponent = () => {\r\n  const {userData} = useSelector(state => {\r\n    return state\r\n  });\r\n\r\n  const [value, setValue] = React.useState<string>('');\r\n\r\n  const history = useHistory();\r\n  const redirectToChangePWPage = React.useCallback(() => {\r\n      history.replace({pathname: '/reset-password'});\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const location: { state: {from: Location} } = useLocation();\r\n\r\n  if (userData.user.name !== '' && userData.user.email !== '') {\r\n    return (\r\n      <Redirect\r\n        to={location.state?.from || '/' }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className={forgotPWPage.wrapper} onSubmit={(e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (value !== '') {\r\n          dispatch(requestToResetPassword(value, redirectToChangePWPage));\r\n        }\r\n      }}>\r\n        <h2 className=\"text text_type_main-medium\">Восстановление пароля</h2>\r\n        <InputDefault placeholder={'Укажите e-mail'} value={value} onChange={e => setValue(e.target.value)}\r\n                      type='email'/>\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Восстановить\r\n        </Button>\r\n      </form>\r\n      <div className={forgotPWPage.text}>\r\n        <div className={forgotPWPage.textWrapper}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            Вспомнили пароль?\r\n            <Link to=\"/login\"\r\n                  className={`ml-2 text text_type_main-default text_color_inactive ${forgotPWPage.link}`}>Войти\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\nimport {Link, Redirect, useLocation} from \"react-router-dom\";\r\n\r\nimport resetPWPage from \"./reset-password-page.module.css\";\r\n\r\nimport {changePassword} from \"../../services/actions/change-password\";\r\n\r\nimport {InputDefault} from \"../../components/input-default/input-default\";\r\n\r\nimport {Button} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {useAppDispatch, useSelector} from \"../../services/types/hooks\";\r\n\r\nexport const ResetPasswordPage: FunctionComponent = () => {\r\n  const {userData, forgotPasswordMarker} = useSelector(state => {\r\n    return state\r\n  });\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [password, setPassword] = React.useState<string>('');\r\n  const [code, setCode] = React.useState<string>('');\r\n  const typePassword = 'password';\r\n\r\n  const location: { state: {from: Location} } = useLocation();\r\n\r\n  if (userData.user.name !== '' && userData.user.email !== '') {\r\n    return (\r\n      <Redirect\r\n        to={location.state?.from || '/' }\r\n      />\r\n    );\r\n  } else if (forgotPasswordMarker.emailWasSent !== true) {\r\n    return (\r\n      <Redirect\r\n        to={{pathname: \"/login\"}}/>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className={resetPWPage.wrapper} onSubmit={(e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        dispatch(changePassword(password, code));\r\n      }}>\r\n        <h2 className=\"text text_type_main-medium\">Восстановление пароля</h2>\r\n        <InputDefault placeholder={'Введите новый пароль'} value={password} onChange={(e) => {\r\n          setPassword(e.target.value);\r\n\r\n        }}\r\n                      icon={'ShowIcon'} type={typePassword}/>\r\n        <InputDefault placeholder={'Введите код из письма'} value={code} onChange={e => setCode(e.target.value)}\r\n                      type='text'/>\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Восстановить\r\n        </Button>\r\n      </form>\r\n      <div className={resetPWPage.text}>\r\n        <div className={resetPWPage.textWrapper}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            Вспомнили пароль?\r\n            <Link to=\"/login\"\r\n                  className={`ml-2 text text_type_main-default text_color_inactive ${resetPWPage.link}`}>Войти\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport navigation from './account-navigation.module.css';\r\nimport {TPropsAccount} from \"../../services/types/data\";\r\n\r\nexport const AccountNavigation: FunctionComponent<TPropsAccount> = (props) => {\r\n  return (\r\n    <nav className={navigation.wrapper}>\r\n      <NavLink to=\"/profile\" exact={true} className={`text text_type_main-medium text_color_inactive ${navigation.link}`}\r\n               activeClassName={`text text_type_main-medium text_color_inactive ${navigation.link} ${navigation.active}`}>Профиль</NavLink>\r\n      <NavLink to=\"/profile/orders\" className={`text text_type_main-medium text_color_inactive ${navigation.link}`}\r\n               activeClassName={`text text_type_main-medium text_color_inactive ${navigation.link} ${navigation.active}`}>История\r\n        заказов</NavLink>\r\n      <NavLink to=\"/profile/logout\" exact={true} className={`text text_type_main-medium text_color_inactive ${navigation.link}`}\r\n               activeClassName={`text text_type_main-medium text_color_inactive ${navigation.link} ${navigation.active}`}>Выход</NavLink>\r\n      <p className={`text text_type_main-small text_color_inactive ${navigation.text}`}>{props.text}</p>\r\n    </nav>\r\n  )\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\n\r\nimport profilePage from \"./profile-page.module.css\";\r\n\r\nimport {AccountNavigation} from \"../../components/account-navigation/account-navigation\";\r\n\r\nimport {TPropsAccount} from \"../../services/types/data\";\r\n\r\nexport const AccountPage: FunctionComponent<TPropsAccount> = (props) => {\r\n  return (\r\n    <div className={profilePage.main}>\r\n      <AccountNavigation text={props.text}/>\r\n        {props.children}\r\n    </div>\r\n  )\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\n\r\nimport {useAppDispatch} from \"../../services/types/hooks\";\r\n\r\nimport profile from './profile-details.module.css';\r\n\r\nimport {InputDefault} from \"../input-default/input-default\";\r\nimport {refreshUserData} from \"../../services/actions/user\";\r\nimport {getCookie} from \"../../utils/burger-data\";\r\n\r\nimport {useSelector} from \"../../services/types/hooks\";\r\n\r\nimport {Button} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nexport const ProfileDetails: FunctionComponent = () => {\r\n  const {userData} = useSelector(state => {\r\n    return state\r\n  });\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [username, setUsername] = React.useState<string>(''); // инф-ция о юзере, приходящая в ответе от api после регисрации\r\n  const [login, setLogin] = React.useState<string>('');\r\n  const [password, setPassword] = React.useState<string>('');\r\n\r\n  React.useEffect(() => {\r\n    if (userData.user.name !== '' && userData.user.email !== '') {\r\n      setUsername(userData.user.name);\r\n      setLogin(userData.user.email);\r\n    }\r\n  }, [userData.user])\r\n\r\n  // проверяем, изменилась ли форма, чтобы показать кнопки\r\n  const isFormChanged =\r\n    username !== userData.user.name ||\r\n    login !== userData.user.email ||\r\n    password\r\n\r\n  return (\r\n    <>\r\n      <form className={profile.wrapper} onSubmit={(e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        dispatch(refreshUserData(getCookie('accessToken'), username, login, password));\r\n      }}>\r\n        <InputDefault value={username} onChange={(e) => {\r\n          setUsername(e.target.value);\r\n        }} type=\"text\" placeholder=\"Имя\" icon=\"EditIcon\"/>\r\n        <InputDefault value={login} onChange={(e) => {\r\n          setLogin(e.target.value);\r\n        }} type=\"email\" placeholder=\"Логин\" icon=\"EditIcon\"/>\r\n        <InputDefault value={password} onChange={(e) => {\r\n          setPassword(e.target.value);\r\n        }} type=\"password\" placeholder=\"Пароль\" icon=\"EditIcon\"/>\r\n        {\r\n          isFormChanged &&\r\n          <div className={profile.buttons}>\r\n            <Button type=\"primary\" size=\"medium\">Сохранить</Button>\r\n            <Button type=\"secondary\" size=\"medium\" onClick={() => {\r\n              setUsername(userData.user.name);\r\n              setLogin(userData.user.email);\r\n            }}>Отмена</Button>\r\n          </div>\r\n        }\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\nimport logoutPage from \"./logout-page.module.css\";\r\n\r\nimport {Button} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {logout} from \"../../services/actions/auth\";\r\nimport {useAppDispatch} from \"../../services/types/hooks\";\r\n\r\nexport const LogoutPage: FunctionComponent = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <div className={logoutPage.wrapper}>\r\n        <h2 className=\"text text_type_main-medium\">Выйти из профиля?</h2>\r\n        <div className={logoutPage.buttons}>\r\n          <Button type=\"secondary\" size=\"medium\" onClick={() => {\r\n            dispatch(logout());\r\n          }}>\r\n            Да\r\n          </Button>\r\n          <Button type=\"primary\" size=\"medium\" onClick={() => {\r\n            window.history.back();\r\n          }}>\r\n            Нет\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/404_shiba_inu.85129963.png\";","import React, {FunctionComponent} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport trollShibaInu from '../../images/404_shiba_inu.png';\r\nimport notFound from './not-found-404.module.css';\r\n\r\nexport const NotFound404: FunctionComponent = () => {\r\n  return (\r\n    <div className={notFound.wrapper}>\r\n      <img className={notFound.image} src={trollShibaInu} alt=\"Собака не понимает, где страница\"/>\r\n      <h1 className={`text text_type_main-large ${notFound.text}`}>Святые булочки, <br/> страница не существует!!!</h1>\r\n      <Link to='/' className={notFound.link}>Перейти в Конструктор бургеров</Link>\r\n    </div>\r\n  )\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\n\r\nimport ingredientIcon from './ingredient-icon.module.css';\r\n\r\nimport {Counter} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {TIngredientIcon} from \"../../services/types/data\";\r\n\r\nexport const IngredientIcon: FunctionComponent<TIngredientIcon> = (props) => {\r\n  return (\r\n    <div className={ingredientIcon.roundDiv}>\r\n      <div className={ingredientIcon.moduleBorderWrap}>\r\n        {\r\n          props.isSixth && props.index === 0\r\n            ? <div className={ingredientIcon.module}>\r\n              <p className={`text text_type_main-default ${ingredientIcon.counter}`}>{`+${props.restCount}`}</p>\r\n              <div className={ingredientIcon.sixthIngredient}>\r\n                <img className={ingredientIcon.image} src={props.image} alt={props.imageName}/>\r\n              </div>\r\n            </div>\r\n            : <div className={ingredientIcon.module}>\r\n              <img className={ingredientIcon.image} src={props.image} alt={props.imageName}/>\r\n            </div>\r\n        }\r\n        {\r\n          props.ingredientCount && props.ingredientCount > 1 &&\r\n          <Counter count={props.ingredientCount} size=\"small\"/>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\n\r\nimport order from './created-order.module.css';\r\n\r\nimport {IngredientIcon} from \"../ingredient-icon/ingredient-icon\";\r\nimport {useAppDispatch, useSelector} from \"../../services/types/hooks\";\r\nimport {TOrders} from \"../../services/types/data\";\r\nimport {\r\n  calculateTotalPrice, replaceBunToStart, cutDuplicatesFromArray,\r\n  defineActualOrderDateInformation,\r\n  mapBunAndIngredientsFromArray,\r\n  mapBurgerIngredientFromId, countNotUniqueIngredients\r\n} from \"../../utils/burger-data\";\r\n\r\nimport {CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {handleModalSlice} from \"../../services/toolkit-slices/modal\";\r\n\r\nexport const CreatedOrder: FunctionComponent<{ order: TOrders, status: boolean }> = (props) => {\r\n  const {burgerDataState} = useSelector(state => {\r\n    return state;\r\n  })\r\n\r\n  const actionsModal = handleModalSlice.actions;\r\n  const dispatch = useAppDispatch();\r\n\r\n  /***---- getting ingredient properties by ingredient id; separating bun and pushing it to start ----***/\r\n  const burgerIngredient = mapBurgerIngredientFromId(props.order.ingredients, burgerDataState.burgerData);\r\n  const burgerIngredientBunSorted = replaceBunToStart(burgerIngredient);\r\n  const burgerIngredientCutDuplicates = cutDuplicatesFromArray(burgerIngredientBunSorted);\r\n\r\n  /*** if ingredient-array is longer than 6 ***/\r\n  const burgerIngredientSixFirst = burgerIngredientCutDuplicates.slice(0, 6);\r\n  // [const cutCount = burgerIngredientBunSorted.length;\r\n  // const burgerIngredientRest = burgerIngredientBunSorted.splice(6, cutCount);\r\n  // const countOfRestedIngredients = burgerIngredientRest.length;]\r\n\r\n  let restIngredientCount = 0;\r\n  if (burgerIngredientCutDuplicates.length > 6) {\r\n    restIngredientCount = burgerIngredientCutDuplicates.length - 6;\r\n  }\r\n\r\n  const countOfDuplicatedIngredients = countNotUniqueIngredients(props.order.ingredients);\r\n\r\n  /***---- total price ----***/\r\n  const calculateTotalFeedOrderPrice = React.useMemo(() => {\r\n    const newBurgerIngredient = mapBunAndIngredientsFromArray(burgerIngredientBunSorted);\r\n    return calculateTotalPrice(newBurgerIngredient.bun, newBurgerIngredient.ingredients);\r\n  }, [burgerIngredientBunSorted])\r\n\r\n  /***---- date format ----***/\r\n  const orderCreatedAt = defineActualOrderDateInformation(props.order.createdAt);\r\n\r\n  return (\r\n    <div className={order.wrapper}\r\n         onClick={() => {\r\n           dispatch(actionsModal.setIngredientForModal(props.order));\r\n           dispatch(actionsModal.handleModalOpen({\r\n             modalOrderDetailsOpened: true\r\n           }))\r\n         }}>\r\n      <div className={order.preview}>\r\n        <p className=\"text text_type_digits-default\">{`#${props.order.number}`}</p>\r\n        <p className=\"text text_type_main-default text_color_inactive\">{orderCreatedAt}</p>\r\n      </div>\r\n      <h2 className={`text text_type_main-medium ${order.burgerName}`}>{props.order.name}</h2>\r\n      {\r\n        props.status &&\r\n        (\r\n          props.order.status === 'done'\r\n            ? <p className={`mt-2 text text_type_main-default ${order.textDone}`}>Выполнен</p>\r\n            : props.order.status === 'created'\r\n              ? <p className=\"mt-2 text text_type_main-default\">Создан</p>\r\n              : <p className=\"mt-2 text text_type_main-default\">Готовится</p>\r\n        )\r\n      }\r\n      <div className={order.ingredients}>\r\n        <div className={order.ingredientsWrapper}>\r\n          {\r\n            burgerIngredientCutDuplicates.length <= 6\r\n              ? burgerIngredientCutDuplicates.reverse().map((ingredient, index) => ingredient && ingredient.name && ingredient.image // получаем ingredient - чтобы он при поиске не был undefined\r\n                && <IngredientIcon key={index} image={ingredient.image} imageName={ingredient.name} isSixth={false}\r\n                                   ingredientCount={countOfDuplicatedIngredients[ingredient._id]}/>)\r\n              : burgerIngredientSixFirst.reverse().map((ingredient, index) => ingredient && ingredient.name && ingredient.image // получаем ingredient - чтобы он при поиске не был undefined\r\n                && <IngredientIcon key={index} image={ingredient.image} imageName={ingredient.name} isSixth={true}\r\n                                   index={index}\r\n                                   restCount={restIngredientCount}\r\n                                   ingredientCount={countOfDuplicatedIngredients[ingredient._id]}/>\r\n              )\r\n          }\r\n\r\n        </div>\r\n        <div className={order.price}>\r\n          <p className=\"mr-2 text text_type_digits-default\">{calculateTotalFeedOrderPrice}</p>\r\n          <CurrencyIcon type=\"primary\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\n\r\nimport numbersList from './order-numbers-list.module.css';\r\n\r\nexport const OrderNumbersList: FunctionComponent<{listName: string}> = (props) => {\r\n  return (\r\n    <div className={numbersList.container}>\r\n      <p className=\"text text_type_main-medium\">{props.listName}</p>\r\n      <div className={numbersList.wrapper}>\r\n        <div className={numbersList.wrapperList}>\r\n          <div className={numbersList.list}>\r\n            {/*<p className=\"mb-2 mr-2 text text_type_digits-default\">123654</p>*/}\r\n            {/*<p className=\"mb-2 mr-2 text text_type_digits-default\">123654</p>*/}\r\n            {/*<p className=\"mb-2 mr-2 text text_type_digits-default\">123654</p>*/}\r\n            {props.children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\n\r\nimport totalOrders from './total-orders.module.css';\r\n\r\nexport const TotalOrders: FunctionComponent<{ heading: string, count: number | string}> = (props) => {\r\n  return (\r\n    <div className={totalOrders.wrapper}>\r\n      <h2 className=\"text text_type_main-medium\">{props.heading}</h2>\r\n      <p className={`text text_type_digits-large ${totalOrders.text}`}>{props.count}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\n\r\nimport createdNumbers from './order-statistics.module.css';\r\n\r\nimport {OrderNumbersList} from \"../order-numbers-list/order-numbers-list\";\r\nimport {TotalOrders} from \"../total-orders/total-orders\";\r\nimport {useSelector} from \"../../services/types/hooks\";\r\n\r\nexport const CreatedOrdersStatistics: FunctionComponent = () => {\r\n  const {ordersFeedState} = useSelector(state => {\r\n    return state;\r\n  })\r\n\r\n  const total = ordersFeedState.total.toLocaleString('ru-RU');\r\n  const totalToday = ordersFeedState.totalToday.toLocaleString('ru-RU');\r\n\r\n  return (\r\n    <div>\r\n      <div className={createdNumbers.wrapper}>\r\n        <OrderNumbersList listName=\"Готовы:\">\r\n          {\r\n            ordersFeedState.orders.map((order, index) => order.status === 'done' &&\r\n              <p key={index}\r\n                className={`mb-2 mr-2 text text_type_digits-default ${createdNumbers.textOrderDone}`}>{order.number}</p>)\r\n          }\r\n        </OrderNumbersList>\r\n        <OrderNumbersList listName=\"В работе:\">\r\n          {\r\n            ordersFeedState.orders.map((order) => {\r\n              return ((order.status === 'created' || order.status === 'pending') &&\r\n                <p className={`mb-2 mr-2 text text_type_digits-default`}>{order.number}</p>)\r\n            })\r\n          }\r\n        </OrderNumbersList>\r\n      </div>\r\n      <TotalOrders heading=\"Выполнено за все время:\" count={total}/>\r\n      <TotalOrders heading=\"Выполнено за сегодня:\" count={totalToday}/>\r\n    </div>\r\n  )\r\n}\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nimport {IFeedSliceState} from \"../types/index\";\r\nimport {IWebSocketActions} from \"../types/action-type\";\r\n\r\nexport const ordersFeedSlice = createSlice({\r\n  name: 'orders',\r\n  initialState: {\r\n    isOrderFeedLoading: false,\r\n    success: false,\r\n    orders: [],\r\n    total: 0,\r\n    totalToday: 0,\r\n\r\n    wsStartConnecting: false,\r\n    wsConnected: false,\r\n    hasError: false,\r\n    error: null\r\n  } as IFeedSliceState,\r\n  reducers: {\r\n    wsInit: (state)=> {\r\n      return {\r\n        ...state,\r\n        wsStartConnecting: true\r\n      }\r\n    },\r\n    wsConnectionSuccess: (state) => {\r\n      return {\r\n        ...state,\r\n        wsStartConnecting: false,\r\n        wsConnected: true\r\n      }\r\n    },\r\n    wsConnectionError: (state, action: PayloadAction<string>) => {\r\n      return {\r\n        ...state,\r\n        wsConnected: false,\r\n        hasError: true,\r\n        error: action.payload\r\n      }\r\n    },\r\n    wsGetMessage: (state, action: PayloadAction<IFeedSliceState>) => {\r\n      return {\r\n        ...state,\r\n        success: action.payload.success,\r\n        orders: action.payload.orders,\r\n        total: action.payload.total,\r\n        totalToday: action.payload.totalToday\r\n      }\r\n    },\r\n    wsSendMessage: (state, action: PayloadAction<string>) => {\r\n      return {\r\n        ...state\r\n      }\r\n    },\r\n    wsConnectionClosed: (state) => {\r\n      return {\r\n        ...state,\r\n        wsConnected: false,\r\n        // hasError: true,\r\n        // error: `Socket closed with code: , ${action.payload.code}`\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport default ordersFeedSlice.reducer\r\nexport const {\r\n  wsInit,\r\n  wsSendMessage,\r\n  wsConnectionSuccess,\r\n  wsConnectionError,\r\n  wsConnectionClosed,\r\n  wsGetMessage\r\n} = ordersFeedSlice.actions;\r\n\r\n\r\n// привязываем типы из интерфейса к конкретным экшнам\r\nexport const wsActions: IWebSocketActions = {\r\n  wsInit: wsInit,\r\n  wsSendMessage: wsSendMessage,\r\n  onOpen: wsConnectionSuccess,\r\n  onClose: wsConnectionClosed,\r\n  onError:  wsConnectionError,\r\n  onMessage: wsGetMessage,\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\nimport {Link, useLocation} from \"react-router-dom\";\r\n\r\nimport feedWrapper from \"./feed-page.module.css\";\r\n\r\nimport {CreatedOrder} from \"../../components/created-order/created-order\";\r\nimport {CreatedOrdersStatistics} from \"../../components/order-statistics/order-statistics\";\r\nimport {useEffect} from \"react\";\r\nimport {useAppDispatch, useSelector} from \"../../services/types/hooks\";\r\n\r\nimport {ordersFeedSlice} from \"../../services/toolkit-slices/orders-feed\";\r\n\r\nexport const FeedPage: FunctionComponent = () => {\r\n  const {ordersFeedState} = useSelector(state => {\r\n    return state;\r\n  })\r\n  const actionsOrdersFeed = ordersFeedSlice.actions;\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n      dispatch(actionsOrdersFeed.wsInit());\r\n      return () => {\r\n        dispatch(actionsOrdersFeed.wsConnectionClosed());\r\n      }\r\n    }, [actionsOrdersFeed, dispatch]\r\n  )\r\n\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text text_type_main-large\">Лента заказов</h1>\r\n      <div className={feedWrapper.section}>\r\n        <div className={feedWrapper.feed}>\r\n          {\r\n            ordersFeedState.orders.map((order, index) => (\r\n              <div className={feedWrapper.feedItem} key={index}>\r\n                <Link to={{\r\n                  pathname: `feed/${order._id}`,\r\n                  state: {background: location}\r\n                }}\r\n                      className={`text text_type_main-medium ${feedWrapper.link}`}\r\n                >\r\n                  <div className={feedWrapper.orderWrapper}>\r\n                    <CreatedOrder order={order} status={false}/>\r\n                  </div>\r\n                </Link>\r\n              </div>)\r\n            )\r\n          }\r\n        </div>\r\n        <CreatedOrdersStatistics/>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, {FunctionComponent} from \"react\";\r\n\r\nimport orderComposition from './order-composition.module.css';\r\n\r\nimport {IngredientIcon} from \"../ingredient-icon/ingredient-icon\";\r\n\r\nimport {CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport {TOrderComposition} from \"../../services/types/data\";\r\n\r\nexport const OrderComposition: FunctionComponent<TOrderComposition> = (props) => {\r\n  return (\r\n    <div className={orderComposition.wrapper}>\r\n      <div className={orderComposition.part}>\r\n        <IngredientIcon image={props.image} imageName={props.name}/>\r\n        <p className=\"ml-4 text text_type_main-default\">{props.name}</p>\r\n      </div>\r\n      <div className={orderComposition.part}>\r\n        <p className=\"mr-2 ml-4 text text_type_digits-default\">\r\n          {\r\n            props.type === 'bun'\r\n              ? `2 x ${props.price}`\r\n              : props.ingredientCount > 1\r\n                ? `${props.ingredientCount} x ${props.price}`\r\n                : `1 x ${props.price}`\r\n          }\r\n        </p>\r\n        <CurrencyIcon type=\"primary\"/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {FunctionComponent, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nimport {useSelector} from \"../../services/types/hooks\";\r\n\r\nimport orderDetails from './order-details.module.css';\r\n\r\nimport {OrderComposition} from \"../order-composition/order-composition\";\r\n\r\nimport {TOrders} from \"../../services/types/data\";\r\n\r\nimport {\r\n  calculateTotalPrice, countNotUniqueIngredients, cutDuplicatesFromArray,\r\n  defineActualOrderDateInformation, mapBunAndIngredientsFromArray,\r\n  mapBurgerIngredientFromId, replaceBunToStart\r\n} from \"../../utils/burger-data\";\r\n\r\nimport {CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nexport const OrderDetails: FunctionComponent<{ array: ReadonlyArray<TOrders> }> = (props) => {\r\n  const {burgerDataState} = useSelector((state) => {\r\n    return state;\r\n  })\r\n\r\n  const [order, setOrder] = useState<TOrders | undefined>(undefined);\r\n  // const [userOrder, setUserOrder] = useState<TOrders | undefined>(undefined);\r\n\r\n  const params: { id: string } = useParams();\r\n  React.useEffect(() => {\r\n    const findOrderResult = props.array.find(element => element._id === params.id);\r\n    setOrder(findOrderResult);\r\n\r\n    // const findUserOrderResult = userOrdersFeedState.orders.find(element => element._id === params.id);\r\n    // setUserOrder(findUserOrderResult);\r\n  }, [params.id, props.array])\r\n\r\n  let orderIngredients;\r\n  let orderIngredientBunSorted;\r\n  let orderIngredientCutDuplicates;\r\n  let countOfDuplicatedIngredients: { [x: string]: number; };\r\n\r\n  let orderTotalPrice;\r\n  let orderCreatedAt;\r\n\r\n  if (order) {\r\n    orderIngredients = mapBurgerIngredientFromId(order.ingredients, burgerDataState.burgerData);\r\n    orderIngredientBunSorted = replaceBunToStart(orderIngredients);\r\n    orderIngredientCutDuplicates = cutDuplicatesFromArray(orderIngredientBunSorted);\r\n\r\n    countOfDuplicatedIngredients = countNotUniqueIngredients(order.ingredients);\r\n\r\n    const newOrderIngredients = mapBunAndIngredientsFromArray(orderIngredientBunSorted)\r\n    orderTotalPrice = calculateTotalPrice(newOrderIngredients.bun, newOrderIngredients.ingredients)\r\n    orderCreatedAt = defineActualOrderDateInformation(order.createdAt);\r\n  }\r\n\r\n  // let userOrderIngredients;\r\n  // let userOrderIngredientBunSorted;\r\n  // let userOrderIngredientCutDuplicates;\r\n  // let countOfDuplicatedUserIngredients: { [x: string]: number; };\r\n  //\r\n  // let userOrderTotalPrice;\r\n  // let userOrderCreatedAt;\r\n  // if (userOrder) {\r\n  //   userOrderIngredients = mapBurgerIngredientFromId(userOrder.ingredients, burgerDataState.burgerData);\r\n  //   userOrderIngredientBunSorted = replaceBunToStart(userOrderIngredients);\r\n  //   userOrderIngredientCutDuplicates = cutDuplicatesFromArray(userOrderIngredientBunSorted);\r\n  //\r\n  //   countOfDuplicatedUserIngredients = countNotUniqueIngredients(userOrder.ingredients);\r\n  //\r\n  //   const newUserOrderIngredients = mapBunAndIngredientsFromArray(userOrderIngredientBunSorted)\r\n  //   userOrderTotalPrice = calculateTotalPrice(newUserOrderIngredients.bun, newUserOrderIngredients.ingredients)\r\n  //   userOrderCreatedAt = defineActualOrderDateInformation(userOrder.createdAt);\r\n  // }\r\n\r\n  return (\r\n    <div className={orderDetails.wrapper}>\r\n      {\r\n        order &&\r\n        <>\r\n          <p className=\"mb-10 text text_type_digits-default\">{`#${order.number}`}</p>\r\n          <h2 className=\"mb-3 text text_type_main-medium\">{order.name}</h2>\r\n          {\r\n            order.status === \"done\"\r\n              ? <p className={`mb-15 text text_type_main-default ${orderDetails.textDone}`}>Выполнен</p>\r\n              : order.status === \"created\"\r\n                ? <p className=\"mb-15 text text_type_main-default\">Создан</p>\r\n                : <p className=\"mb-15 text text_type_main-default\">В работе</p>\r\n          }\r\n          <h3 className=\"mb-6 text text_type_main-medium\">Состав:</h3>\r\n          <div className={orderDetails.list}>\r\n            {\r\n              orderIngredientCutDuplicates &&\r\n              orderIngredientCutDuplicates.map((ingredient, index) => (ingredient && ingredient.name && ingredient.image &&\r\n                <OrderComposition key={index} image={ingredient.image} name={ingredient.name} type={ingredient.type}\r\n                                  price={ingredient.price}\r\n                                  ingredientCount={countOfDuplicatedIngredients[ingredient._id]}/>\r\n              ))\r\n            }\r\n          </div>\r\n          <div className={orderDetails.total}>\r\n            <p className=\"text text_type_main-default text_color_inactive\">{orderCreatedAt}</p>\r\n            <div className={orderDetails.count}>\r\n              <p className=\"mr-2 text text_type_digits-default\">{orderTotalPrice}</p>\r\n              <CurrencyIcon type=\"primary\"/>\r\n            </div>\r\n          </div>\r\n        </>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React, {FunctionComponent, useEffect} from \"react\";\r\n\r\nimport orderDetailsPage from './order-details-page.module.css';\r\n\r\nimport {OrderDetails} from \"../../components/order-details/order-details\";\r\nimport {TOrders} from \"../../services/types/data\";\r\n\r\nimport {useAppDispatch} from \"../../services/types/hooks\";\r\nimport {IWebSocketActions} from \"../../services/types/action-type\";\r\n\r\nexport const OrderDetailsPage: FunctionComponent<{orderActions: IWebSocketActions, order: ReadonlyArray<TOrders>, children?: React.ReactNode}> = (props) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(props.orderActions.wsInit());\r\n    return () => {\r\n      dispatch(props.orderActions.onClose());\r\n    }\r\n  }, [dispatch, props.orderActions])\r\n\r\n  return (\r\n    <div className={orderDetailsPage.wrapper}>\r\n      <OrderDetails array={props.order}/>\r\n    </div>\r\n  )\r\n}\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nimport {IFeedSliceState} from \"../types/index\";\r\nimport {IWebSocketActions} from \"../types/action-type\";\r\n\r\nexport const userOrdersFeedSlice = createSlice({\r\n  name: 'userOrders',\r\n  initialState: {\r\n    isOrderFeedLoading: false,\r\n    success: false,\r\n    orders: [],\r\n    total: 0,\r\n    totalToday: 0,\r\n\r\n    wsStartConnecting: false,\r\n    wsConnected: false,\r\n    hasError: false,\r\n    error: null\r\n  } as IFeedSliceState,\r\n  reducers: {\r\n    wsInit: (state) => {\r\n      return {\r\n        ...state,\r\n        wsStartConnecting: true\r\n      }\r\n    },\r\n    wsConnectionSuccess: (state) => {\r\n      return {\r\n        ...state,\r\n        wsStartConnecting: false,\r\n        wsConnected: true\r\n      }\r\n    },\r\n    wsConnectionError: (state, action: PayloadAction<string>) => {\r\n      return {\r\n        ...state,\r\n        wsConnected: false,\r\n        hasError: true,\r\n        error: action.payload\r\n      }\r\n    },\r\n    wsGetMessage: (state, action: PayloadAction<IFeedSliceState>) => {\r\n      return {\r\n        ...state,\r\n        success: action.payload.success,\r\n        orders: action.payload.orders,\r\n        total: action.payload.total,\r\n        totalToday: action.payload.totalToday\r\n      }\r\n    },\r\n    wsSendMessage: (state, action: PayloadAction<string>) => {\r\n      return {\r\n        ...state\r\n      }\r\n    },\r\n    wsConnectionClosed: (state) => {\r\n      return {\r\n        ...state,\r\n        wsConnected: false,\r\n        // hasError: true,\r\n        // error: `Socket closed with code: , ${action.payload.code}`\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport default userOrdersFeedSlice.reducer;\r\n\r\nexport const {\r\n  wsInit,\r\n  wsSendMessage,\r\n  wsConnectionSuccess,\r\n  wsConnectionError,\r\n  wsConnectionClosed,\r\n  wsGetMessage\r\n} = userOrdersFeedSlice.actions;\r\n\r\n// привязываем типы из интерфейса к конкретным экшнам - САМОЕ ГЛАВНОЕ В СОЗДАНИИ УНИВЕРСАЛЬНОГО СОКЕТА!!!\r\nexport const wsActionsSecured: IWebSocketActions = {\r\n  wsInit: wsInit,\r\n  wsSendMessage: wsSendMessage,\r\n  onOpen: wsConnectionSuccess,\r\n  onClose: wsConnectionClosed,\r\n  onError:  wsConnectionError,\r\n  onMessage: wsGetMessage,\r\n}\r\n","import React, {FunctionComponent, useEffect} from \"react\";\r\nimport {Link, useLocation} from \"react-router-dom\";\r\n\r\nimport userOrders from \"./my-orders-page.module.css\";\r\n\r\nimport {useAppDispatch, useSelector} from \"../../services/types/hooks\";\r\nimport {userOrdersFeedSlice} from \"../../services/toolkit-slices/user-orders-feed\";\r\n\r\nimport {CreatedOrder} from \"../../components/created-order/created-order\";\r\n\r\nexport const MyOrdersPage: FunctionComponent = () => {\r\n  const {userOrdersFeedState} = useSelector(state => {\r\n    return state;\r\n  })\r\n  const actionsUserOrdersFeed = userOrdersFeedSlice.actions;\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(actionsUserOrdersFeed.wsInit());\r\n    return () => {\r\n      dispatch(actionsUserOrdersFeed.wsConnectionClosed());\r\n    }\r\n  }, [actionsUserOrdersFeed, dispatch])\r\n\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div className={userOrders.wrapper}>\r\n      <ul className={userOrders.feed}>\r\n        {\r\n          userOrdersFeedState.orders.map((order, index) => (\r\n            <li className={userOrders.feedItem} key={index}>\r\n              <Link to={{\r\n                pathname: `orders/${order._id}`,\r\n                state: {background: location}\r\n              }}\r\n                    className={`text text_type_main-medium ${userOrders.link}`}\r\n              >\r\n                <CreatedOrder order={order} status={true}/>\r\n              </Link>\r\n            </li>\r\n          )).reverse()\r\n        }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n","import React, {FunctionComponent} from 'react';\r\nimport {Switch, Route, useLocation, useHistory} from \"react-router-dom\";\r\n\r\nimport {ProtectedRoute} from \"../protected-route/protected-route\";\r\n\r\nimport {IngredientDetailsPage} from \"../../pages/ingredient-details-page/ingredient-details-page\";\r\n\r\nimport {useAppDispatch, useSelector} from \"../../services/types/hooks\";\r\n\r\nimport main from './app.module.css';\r\n\r\nimport {getBurgerDataFromServer} from \"../../services/actions/burger-data\";\r\nimport {getUser} from \"../../services/actions/user\";\r\n\r\nimport AppHeader from \"../app-header/app-header\";\r\n\r\nimport {BurgerConstructorPage} from \"../../pages/burger-constructor-page/burger-constructor-page\";\r\nimport {AuthorisationPage} from \"../../pages/authorisation-page/authorisation-page\";\r\nimport {RegistrationPage} from \"../../pages/register-page/register-page\";\r\nimport {ForgotPasswordPage} from \"../../pages/forgor-password-page/forgor-password-page\";\r\nimport {ResetPasswordPage} from \"../../pages/reset-password-page/reset-password-page\";\r\nimport {AccountPage} from \"../../pages/profile-page/profile-page\";\r\nimport {ProfileDetails} from \"../profile-details/profile-details\";\r\nimport {getCookie} from \"../../utils/burger-data\";\r\nimport {LogoutPage} from \"../../pages/logout-page/logout-page\";\r\nimport {NotFound404} from \"../../pages/not-found-404/not-found-404\";\r\nimport {TLocationState} from \"../../services/types/data\";\r\nimport {Modal} from \"../modal/modal\";\r\nimport {IngredientDetails} from \"../ingredient-details/ingredient-details\";\r\nimport {FeedPage} from \"../../pages/feed-page/feed-page\";\r\nimport {OrderDetailsPage} from \"../../pages/order-details-page/order-details-page\";\r\nimport {OrderDetails} from \"../order-details/order-details\";\r\nimport {MyOrdersPage} from \"../../pages/my-orders-page/my-orders-page\";\r\nimport {wsActions} from \"../../services/toolkit-slices/orders-feed\";\r\nimport {wsActionsSecured} from \"../../services/toolkit-slices/user-orders-feed\";\r\n\r\nconst App: FunctionComponent = () => {\r\n  const {burgerDataState, ordersFeedState, userOrdersFeedState} = useSelector(state => {\r\n    return state\r\n  });\r\n\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n\r\n  let location = useLocation<TLocationState>();\r\n  // This piece of state is set when one of the\r\n  // gallery links is clicked. The `background` state\r\n  // is the location that we were at when one of\r\n  // the gallery links was clicked. If it's there,\r\n  // use it as the location for the <Switch> so\r\n  // we show the gallery in the background, behind\r\n  // the modal.\r\n  let background = location.state && location.state.background;\r\n\r\n  /*** API ***/\r\n  React.useEffect(() => {\r\n    // Отправляем экшены при монтировании компонента\r\n    dispatch(getBurgerDataFromServer());\r\n    dispatch(getUser(getCookie('accessToken'), 3));\r\n    if (background) {\r\n      delete location.state.background;\r\n    }\r\n  }, [dispatch, history])\r\n\r\n  /*** App Rendering ***/\r\n  if (burgerDataState.hasError) {\r\n    return <h2 className=\"text text_type_main-default\">{burgerDataState.error.message}</h2>;\r\n  } else if (burgerDataState.isLoading) {\r\n    return <div>Загрузка...</div>;\r\n  } else {\r\n    return (\r\n      // <BrowserRouter>\r\n      <div className={main.main}>\r\n        <AppHeader/>\r\n        <main className=\"pt-10 pb-10\">\r\n          <Switch location={background || location}>\r\n\r\n            <Route path=\"/login\" exact={true}>\r\n              <AuthorisationPage/>\r\n            </Route>\r\n\r\n            <Route path=\"/register\" exact={true}>\r\n              <RegistrationPage/>\r\n            </Route>\r\n\r\n            <Route path=\"/forgot-password\" exact={true}>\r\n              <ForgotPasswordPage/>\r\n            </Route>\r\n\r\n            <Route path=\"/reset-password\" exact={true}>\r\n              <ResetPasswordPage/>\r\n            </Route>\r\n\r\n            <Route path=\"/feed\" exact={true}>\r\n              <FeedPage/>\r\n            </Route>\r\n\r\n            <Route path=\"/feed/:id\" exact={true}>\r\n              <OrderDetailsPage orderActions={wsActions} order={ordersFeedState.orders}/>\r\n            </Route>\r\n\r\n            <ProtectedRoute path=\"/profile\" exact={true}>\r\n              <AccountPage text=\"В этом разделе вы можете изменить свои персональные данные\">\r\n                <ProfileDetails/>\r\n              </AccountPage>\r\n            </ProtectedRoute>\r\n\r\n            <ProtectedRoute path=\"/profile/orders\" exact={true}>\r\n              <AccountPage text=\"В этом разделе вы можете посмотреть свою историю заказов\">\r\n                <MyOrdersPage/>\r\n              </AccountPage>\r\n            </ProtectedRoute>\r\n\r\n            <ProtectedRoute path=\"/profile/orders/:id\" exact={true}>\r\n              {\r\n                userOrdersFeedState.orders !== [] &&\r\n                // передаем реализацию интерфейса IWebSocketActions в виде переменной wsActionsSecured,\r\n                // внутри которой нужные функции соотв-ют типам из этого интерфейса\r\n                <OrderDetailsPage orderActions={wsActionsSecured} order={userOrdersFeedState.orders}/>\r\n              }\r\n            </ProtectedRoute>\r\n\r\n            <ProtectedRoute path=\"/profile/logout\" exact={true}>\r\n              <AccountPage text=\"В этом разделе вы можете выйти из системы\">\r\n                <LogoutPage/>\r\n              </AccountPage>\r\n            </ProtectedRoute>\r\n\r\n            <Route path=\"/ingredient/:id\">\r\n              <IngredientDetailsPage/>\r\n            </Route>\r\n\r\n            <Route path=\"/\" exact={true}>\r\n              <BurgerConstructorPage/>\r\n            </Route>\r\n\r\n            <Route>\r\n              <NotFound404/>\r\n            </Route>\r\n\r\n          </Switch>\r\n          {/*Show the modal when a background page is set */}\r\n          {\r\n            background\r\n            && <Route exact path=\"/ingredient/:id\" children={\r\n              <Modal handleOnClose={() => {\r\n                history.goBack();\r\n              }}>\r\n                <IngredientDetails/>\r\n              </Modal>\r\n            }/>\r\n          }\r\n          {\r\n            background\r\n            && <Route exact path=\"/feed/:id\" children={\r\n              <Modal handleOnClose={() => {\r\n                history.goBack();\r\n              }}>\r\n                <OrderDetails array={ordersFeedState.orders}/>\r\n              </Modal>\r\n            }/>\r\n          }\r\n          {\r\n            background\r\n            && <ProtectedRoute exact path=\"/profile/orders/:id\" children={\r\n              <Modal handleOnClose={() => {\r\n                history.goBack();\r\n              }}>\r\n                <OrderDetails array={userOrdersFeedState.orders}/>\r\n              </Modal>\r\n            }/>\r\n          }\r\n        </main>\r\n      </div>\r\n      // </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from \"redux\";\r\n\r\nimport {burgerDataSlice} from \"./burger-data\";\r\nimport {burgerConstructorSlice} from \"./burger-constructor\";\r\nimport {handleModalSlice} from \"./modal\";\r\nimport {orderSlice} from \"./order\";\r\nimport {totalPriceSlice} from \"./total-price\";\r\nimport {ingredientCounterSlice} from \"./ingredient-counter\";\r\nimport {userDataSlice} from \"./user-data\";\r\nimport {forgotPasswordMarkerSlice} from \"./reset-password-marker\";\r\nimport {ordersFeedSlice} from \"./orders-feed\";\r\nimport {userOrdersFeedSlice} from \"./user-orders-feed\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  burgerDataState: burgerDataSlice.reducer,\r\n  burgerConstructorIngredients: burgerConstructorSlice.reducer,\r\n  modalState: handleModalSlice.reducer,\r\n  orderState: orderSlice.reducer,\r\n  totalPrice: totalPriceSlice.reducer,\r\n  ingredientCounter: ingredientCounterSlice.reducer,\r\n  userData: userDataSlice.reducer,\r\n  forgotPasswordMarker: forgotPasswordMarkerSlice.reducer,\r\n  ordersFeedState: ordersFeedSlice.reducer,\r\n  userOrdersFeedState: userOrdersFeedSlice.reducer,\r\n});\r\n","import {MiddlewareAPI} from \"redux\";\r\nimport {AnyAction} from \"@reduxjs/toolkit\";\r\n\r\nimport {IWebSocketActions} from \"../types/action-type\";\r\nimport {getCookie} from \"../../utils/burger-data\";\r\n\r\nexport const socketMiddleware = (wsUrl: string, wsActions: IWebSocketActions, isTokenRequired: boolean) => {\r\n  // return (store: MiddlewareAPI<AppDispatch, RootState>) => {\r\n  return (store: MiddlewareAPI) => {\r\n    let socket: WebSocket | null = null\r\n    let isConnected = false;\r\n\r\n    return (next: (arg: AnyAction) => void) => (action: AnyAction) => {\r\n      const {payload} = action;\r\n      const accessToken = isTokenRequired ? getCookie('accessToken')?.split(' ')[1] : null;\r\n\r\n      if (!wsActions.wsInit.match(action)) {\r\n        return next(action);\r\n      } else if (!socket) {\r\n        socket = accessToken\r\n          ? new WebSocket(`${wsUrl}?token=${accessToken}`)\r\n          : new WebSocket(`${wsUrl}`);\r\n\r\n        isConnected = true;\r\n\r\n        socket.onopen = () => {\r\n          if (socket && socket.readyState === 1) {\r\n            store.dispatch(wsActions.onOpen());\r\n          }\r\n        }\r\n        socket.onerror = () => {\r\n          store.dispatch(wsActions.onError('Error'));\r\n        }\r\n        socket.onmessage = (event: MessageEvent) => {\r\n          const {data} = event; // извлечение объекта с данными из самого объекта event\r\n          const parsedData = JSON.parse(data);\r\n          store.dispatch(wsActions.onMessage(parsedData));\r\n        }\r\n        socket.onclose = (event: CloseEvent) => {\r\n          store.dispatch(wsActions.onClose());\r\n          if (event.code !== 1000) {\r\n            store.dispatch(wsActions.onError);\r\n            console.log('Socket closed with code: ', event.code);\r\n          }\r\n          if (isConnected) {\r\n            setTimeout(() => {\r\n              store.dispatch(wsActions.wsInit())\r\n            }, 1000)\r\n          }\r\n        }\r\n        if (wsActions.wsSendMessage.match(action)) {\r\n          const message = accessToken ? {...payload, accessToken} : {...payload}\r\n          socket.send(JSON.stringify(message))\r\n        }\r\n        next(action);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {configureStore} from \"@reduxjs/toolkit\";\r\n// import logger from \"redux-logger\";\r\n\r\nimport {rootReducer as reducer} from \"./toolkit-slices/index\";\r\nimport thunk from \"redux-thunk\";\r\nimport {socketMiddleware} from \"./middlware/socket\";\r\n\r\nimport {wsActions} from \"./toolkit-slices/orders-feed\";\r\nimport {wsActionsSecured} from \"./toolkit-slices/user-orders-feed\";\r\n\r\nimport {queryFeedDataUrl} from \"../utils/burger-data\";\r\n\r\nexport const store = configureStore({\r\n  reducer,\r\n  middleware: [thunk,\r\n    socketMiddleware(`${queryFeedDataUrl}/orders/all`, wsActions, false),\r\n    socketMiddleware(`${queryFeedDataUrl}/orders`, wsActionsSecured, true),\r\n  ],\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\nimport {store} from \"./services/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter basename='/space-burgerhouse'>\n        <App/>\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); // функция для улучшения взаимодействия приложения с поисковыми системами\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"roundDiv\":\"ingredient-icon_roundDiv__1KLt9\",\"moduleBorderWrap\":\"ingredient-icon_moduleBorderWrap__2KDnX\",\"module\":\"ingredient-icon_module__1B7Kl\",\"counter\":\"ingredient-icon_counter__1fhFh\",\"sixthIngredient\":\"ingredient-icon_sixthIngredient__1v_-t\",\"image\":\"ingredient-icon_image__2pXqP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredient-details_container__1-8YX\",\"heading\":\"ingredient-details_heading__bGiiD\",\"wrapper\":\"ingredient-details_wrapper__39_0t\",\"properties\":\"ingredient-details_properties__dKlyo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"order-number-details_wrapper__3IrU4\",\"digits\":\"order-number-details_digits__csJWk\",\"shadow\":\"order-number-details_shadow__3Kjo_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"created-order_wrapper__6ZDwG\",\"preview\":\"created-order_preview__30f8u\",\"burgerName\":\"created-order_burgerName__3X9Ph\",\"textDone\":\"created-order_textDone__19IhA\",\"ingredients\":\"created-order_ingredients__uXYYc\",\"ingredientsWrapper\":\"created-order_ingredientsWrapper__1trMK\",\"price\":\"created-order_price__1SdTM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"authorisation-page_wrapper__wA-ob\",\"text\":\"authorisation-page_text__1FDtz\",\"textWrapper\":\"authorisation-page_textWrapper__2vQus\",\"link\":\"authorisation-page_link__2ba2G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burger-ingredients_section__JPGCZ\",\"tab\":\"burger-ingredients_tab__1Ru1Z\",\"burgerIngredients\":\"burger-ingredients_burgerIngredients__2i6ZI\",\"layout\":\"burger-ingredients_layout__13p8T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ingredient_card__1MAgk\",\"wrapper\":\"ingredient_wrapper__Up6XU\",\"text\":\"ingredient_text__MEq95\",\"dragging\":\"ingredient_dragging__aJIiN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"feed-page_section__PSpIJ\",\"feed\":\"feed-page_feed__3ZSQi\",\"feedItem\":\"feed-page_feedItem__2FOUc\",\"link\":\"feed-page_link__3vecC\",\"orderWrapper\":\"feed-page_orderWrapper___c1Ng\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"order-details_wrapper__7rCGD\",\"textDone\":\"order-details_textDone__1gZWN\",\"list\":\"order-details_list__2oooj\",\"total\":\"order-details_total__lo__l\",\"count\":\"order-details_count__1TMXT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"register-page_wrapper__3J4qm\",\"text\":\"register-page_text__wNyCJ\",\"textWrapper\":\"register-page_textWrapper__TbiVu\",\"link\":\"register-page_link__27Cgw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"forgot-password-page_wrapper__1yWSJ\",\"text\":\"forgot-password-page_text__2UTVm\",\"textWrapper\":\"forgot-password-page_textWrapper__1WEyq\",\"link\":\"forgot-password-page_link__3Iqci\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"reset-password-page_wrapper__GZj86\",\"text\":\"reset-password-page_text__2ARrb\",\"textWrapper\":\"reset-password-page_textWrapper__2_q9o\",\"link\":\"reset-password-page_link__2hg3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"not-found-404_wrapper__2cvOE\",\"image\":\"not-found-404_image__1P4N5\",\"text\":\"not-found-404_text__3pGcU\",\"link\":\"not-found-404_link__2WdfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-numbers-list_container__2nsqE\",\"wrapper\":\"order-numbers-list_wrapper__3f4ka\",\"wrapperList\":\"order-numbers-list_wrapperList__vKWA3\",\"list\":\"order-numbers-list_list__2F2l0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"my-orders-page_wrapper__19Xvn\",\"feed\":\"my-orders-page_feed__3lzFM\",\"feedItem\":\"my-orders-page_feedItem__psqkt\",\"link\":\"my-orders-page_link__32omB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"order-composition_wrapper__3liW6\",\"part\":\"order-composition_part__CYY10\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"ingredient-group_grid__14Z0a\",\"link\":\"ingredient-group_link__3dSMM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dragging\":\"constructor-element-draggable_dragging__16Qo6\",\"over\":\"constructor-element-draggable_over__2B8UR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__1DF1f\",\"cross\":\"modal_cross__3JYgg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"profile-details_wrapper__1kTjm\",\"buttons\":\"profile-details_buttons__3akSl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"logout-page_wrapper__lmZLQ\",\"buttons\":\"logout-page_buttons__37ToH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"order-statistics_wrapper__3jisV\",\"textOrderDone\":\"order-statistics_textOrderDone__1Rh6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"total-orders_wrapper__31GVd\",\"text\":\"total-orders_text__37GMB\"};"],"sourceRoot":""}